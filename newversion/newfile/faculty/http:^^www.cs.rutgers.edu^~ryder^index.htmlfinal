barbara g. ryder 



 barbara g. ryder 

 




department of computer science 
hill center, busch campus
rutgers university 
piscataway, nj 08855

office: core 311
phone:  908-445-3699
fax:    908-445-0537
email: 
ryder@cs.rutgers.edu
office hours: wednesdays, 4:30pm-6:30pm
and by appointment.








hi! i am a professor of computer science at rutgers, the state
university of new jersey, having joined the faculty in 1982. my
current research interests include: compile-time program analyses and
software tools for parallel/sequential programming environments.

in july 1995, i was elected chair of acm_sigplan  and have been quite
active in the sigplan community, having served on the sigplan
executive committee for 8 years.  currently, i also serve on
the editorial board of the journal of programming languages, and on the
advisory board of the douglass project for rutgers women in science,
math and engineering. 














my research group is informally referred to as 
 prolangs, 
the programming languages research group.  we have a weekly lunch and a
weekly reading group meeting, on thursday afternoons from 3:00-5:00 pm in core
conference room b, to present and discuss interesting conference and
journal papers, and sometimes to practice our research talks.  we are
the sole rutgers dcs group with our own logo, on t-shirts and
sweatshirts, and lots of 
 
esprit  d'corps! 

my current major 
 nsf grant  
involves collaborative research with 
 dr. bill landi  of
siemens corporate research.  we are investigating how to scale compile-time
analyses to "industrial-strength" programs of 100,000 lines of code.

the  home
page for 198:314  this fall, which i am teaching with armin haken
and phil stocks, will list all information and assignments distributed
in the course. we may list homework answers etc. here as well.

i am team teaching a new version of our 
programming languages and compilers ii  course with prof uli
kremer next semester. we are changing the course to emphasize the
building of an optimizing compiler for an imperative  programming
language, with lecture exploration of non-imperative paradigms as well.

syllabi for courses i  taught in 1995-96:

 198:314 principles of programming languages, 
 198:515 programming languages and compilers i, 
 198:516 programming languages and compilers ii, 


i recently participated in the acm workshop on strategic directions in
computing research, in the programming languages - program analysis
subgroup. my position paper poses some important questions about the
future of program analysis.

for a more personal look, you can see 

my family  (as of may 1994) or 
explore my son
andrew's_home_page;
(be advised that this page is from college, an environment which 
he remembers fondly  now that he has joined the us workforce in seattle, wa.)
  



 person g. ryder
 person g. ryder
 person g. ryder
 person g. ryder
 person g. ryder
 person g. ryder
 person g. ryder
 person g. ryder
 person g. ryder
 person g. ryder