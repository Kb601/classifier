home page of charles n. fischer 




 














&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcharles n. fischer

&nbsp&nbsp&nbsp&nbsp&nbsp&nbspprofessor of computer sciences

&nbsp&nbsp&nbsp&nbsp&nbsp&nbspuniversity of wisconsin








 
 computer sciences department  
 university of wisconsin 
 1210 w. dayton st. 
 madison, wi 53706-1685 
 
 telephone:	(608) 262-6635 
 messages:	(608) 262-1204 
 fax:	(608) 262-9777 
 email:	fischer@cs.wisc.edu





 teaching 


this semester i'm teaching

cs 701,
the graduate course in compilers.

in the spring i'll be teaching

cs 536,
the undergraduate course in compilers.





 research 

my research interests focus on compiler design and implementation.
recently, i've been interested in how to best exploit the enormous
capabilities provided by modern computer architectures.
some of the issues my students and i have investigated include:



code scheduling is important to avoid unnecessary pipeline delays. we have
investigated  issues in
 
optimally scheduling arithmetic expressions.


the dominant model for global (procedure-level) register allocation is graph coloring.
is this the best model?
maybe not.

other models 
that explicitly quantify the likelihood and benefit of register
residence are very attractive.


careful register allocation is vital in generating code -- unnecessary loads
and stores must be avoided.
the ultimate in register allocation is
 interprocedural register allocation in which all the
procedures of a program are analyzed.
we have studied

interprocedural allocation models
that optimally
allocate register among procedures in polynomial time.
what's more, the approach seems to be effective in practice.


anyone who codes in c or c++ knows how easy it is to make mistakes.
errors involving pointers and array indices are especially common.
we have studied ways to

automatically check all pointer and array operations 
at run-time on shared-memory multiprocessor workstations.
using one processor to run a program and another to monitor the program,
it is possible to routinely check programs as they execute, with little or
no apparent slowdown.




 recent publications 



"minimum cost interprocedural register allocation," 
steven m. kurlander and charles n. fischer,

popl '96: the 23rd acm sigplan-sigact symposium on principles of programming
languages,
january, 1996.



"low-cost, concurrent checking of pointer and array accesses in c programs,"
harish patil and charles n. fischer,
to appear in

software--practice and experience.


 
"demand-driven register allocation,"
todd a. proebsting and charles n. fischer,
to appear in

acm transactions on programming languages and systems. 


 
"efficient instruction scheduling for delayed-load architectures,"
steven m. kurlander, todd a. proebsting and charles n. fischer,

acm transactions on programming languages and systems,
vol 17, no. 5, 740-776, (1995).


"zero-cost range splitting,"
steven m. kurlander and charles n. fischer,

sigplan '94 conference on programming language design and implementation,
june, 1994.



other activities


a new, completely revised second edition of
 
"crafting a compiler,"
co-authored with
 
ron cytron
and
 
richard j. leblanc, jr.
is almost complete.
it will be published by
 
benjamin/cummings.
look for it soon at better bookstores everywhere.


i am the "short communications" editor for
 
acm transactions on programming languages and systems
(toplas).



education
ph.d.,
 
cornell university,
1974

"on parsing context-free languages in parallel environments,"

supervised by john h. williams.


ph.d students


donn r. milton,
"syntactic specification and analysis with attributed grammars,"
july 1977.


bruce r. rowland,
"semantic attribute evaluation during syntactic analysis,"
july 1977.


stephen k. skedzielewski,
"definition and use of attribute reevaluation in attributed grammars,"
september 1978.


bernard a. dion,
"locally least-cost error correctors for context-free and context-sensitive
parsers,"
december 1978.


mahadevan ganapathi,
"retargetable code generation and optimization using attribute grammars,"
november 1980.


vimal begwami,
"a new approach for attribute evaluation and error correction in compilers,"
august 1982.


jon mauney,
"least-cost syntactic error correction using extended right context,"
january 1983.


gregory f. johnson,
"context sensitive attribute flow,"
august 1983.


anil pal,
"generating execution facilities for integrated programming environments,"
december 1986.


william h. winsborough,
"automatic, transparent parallelization of logic programs at compile time,"
august 1988.


g a venkatesh,
"a framework for specification and implementation of program analysis algorithms,"
august 1989.


 
todd a. proebsting, 
"code generation techniques,"
august 1992.



steve kurlander,
"approaches to interprocedural register allocation,"
january 1996.


harish patil,
"efficient program monitoring techniques,"
june 1996.









 home page of person person person
 home page of person person person
 home page of person person person
 home page of person person person
 home page of person person person
 home page of person person person
 home page of person person person
 home page of person person person
 home page of person person person
 home page of person person person