cse 590h course project: 



organizing web documents in a desktop
andrew calkins and joe sherman

motivation
the world wide web provides addressing and resource naming
conventions that permit several kinds of computer resources to be
shared globally.  these resources include:

hypertext and hypermedia documents
still images and movies
interactive menus, buttons and dialogs
file transfer


access to these resources is available through application software
known as web viewers or browsers.  there is no inherent,
centralized organization to the web.  as a result, web indexes and search
mechanisms have been developed.  users are free to build their own
hypertext index or save pointers to web pages in lists (e.g. mosaic's
hot list or netscape's bookmark feature).  these lists are
controlled by menus included in the browser's interface.

the nsf has designated the integration of web browsers into the client
workstation desktop as a

research priority for the world wide web.
this integration would eliminate the lack of symmetry between a user's
local files, documents and services, and those available on the world wide
web.  if done right, we believe, it would assist the user in the
organization and access of this content so that items found once could
be easily found again.



what does "integrate into the desktop" mean?
the nsf's research priorities don't explain in detail the phrase,
"integrate into the desktop".  for this project we will assume that
"desktop" refers to user interface software such as:

microsoft windows program manager and file manager
apple macintosh finder
x windows window managers (mwm, twm, ...)

these user interfaces provide the following services, to varying
degress:

organize, view, present available files, resources, documents
launch applications, tasks, projects
permits user to personalize their workstation




how do we organize resources today?

in today's "desktop" interfaces there are different ways of organizing
and displaying local and web resources:

local resources


hierarchical file systems
hierarchical viewers (2d and 3d)
nested "folders"
program groups
varying degrees of support for direct manipulation ("drag-and-drop")


web resources


hot list (with or without limited nesting)
bookmarks (with or without limited nesting)
menu driven or dialog driven control
...or we write our own html pages




problems

before discussing what exactly is meant by "integration of a browser
into a desktop," let's list some of the problems casual users seem to have
using the web.  in each case, let's also ask if this problem might appear
with any distributed, decentralized collection of resources.

we first noticed several of these problems watching a user navigate
the web while trying to build a set of web pages to serve as a topic
tutorial.


there is no support for direct-manipulation arrangement of web views.
today's browsers have at most only primitive mechanisms for organizing
web resources according to personal preference.  hot lists are hierarchical
but menu-driven and non-visual.  bookmarks have similar limitations.
marc andreeson, "inventor" of mosaic and founder of netscape, admitted
in a recent talk that "indexing, navigational aides and content
organization will quickly supersede current layout and design issues"
and that "ultimately, user will have complete control over how content is
viewed."
cumbersome menus prohibit "on-the-fly" organization.
users often spend time finding the same page more than once.
accessing a web page you've seen before is not quick and painless.
some people can remember long url strings, many people can't.  hotlists
and bookmarks help, but as these grow in size, they become difficult to
manage.  in a brief experiment where a person was
instructed to locate and arrange web pages, the subject often had to locate
the page several times because he had forgotten the url.
users must remember and type urls.
home page uses may conflict.  is the purpose of a home page to
organize the owner's view of the web?  or is the purpose to let others
know about the owner and the owner's interests?  these are not the same
goals.




preliminary user studies on organization and navigation


to focus on the ways in which a user retains and organizes access to
web documents, we studied a novice web user in a
quick usability test.



initial investigations

we thought about repeated access to web pages, and how a person
organizes pointers to web resources for future retrieval.  it seemed to us
that many of the direct manipulation techniques included in current
computer"desktops" could be applied to web resources.  in this manner
access to the web would be "integrated" into the desktop.

in the next section we'll try to explain how this would work.
comments and suggestions are welcome.

later on we'll have more to say regarding the desktop metaphor.

the following ideas guided our design:


leverage interactions with current desktop software.
visualize web similar to storage devices (like disks).
use icons to represent web pages
use hierachical or nested views to organized web pages.
provide direct-manipulation operations on web page icons.
activate icon to launches pages.
icons can be generated and saved to desktop view





paper prototype design
we've included a description and drawings to
tour our design.



user study with prototype


we invited out test subject to play with our paper prototype.
our observations and her suggestions
are described in this section.



discussion

in one sense, integrating web access into the computer desktop
really means integrating web "objects" into other applications on the
desktop.  the desktop serves to organize and launch the computer's
resources in support of some activity.  many common task can be
initiated by direct manipulation techniques that move a document onto
icons representing available services (like "printer" or "mailbox").

newer platforms are capable of supporting 3d interfaces
(see vrml and hot java).  this work could be implemented in a 3d interface,
but would not take advantage of perspective, eye position and viewing
direction.  several 3d hierachy views could be used to visualize the
user's organization of web documents.  3d visualization may be more
useful for navigation and exploration of the web than organization.



metaphors

we haven't tried to apply a novel, reality-based metaphor.
that may be either a curse or a blessing.
instead we've decided to extend the popular "desktop" metaphor.
we feel that this metaphor, in several of its implementations, has
assumed a "form of life" of its own almost separate from physical
desktops.  computer users today for the most part are familiar with
some desktop gui.  the use of folders to organize directory trees has
proven useful in desktops, even though physical file folders are not
often hierarchies.

we have envisioned an extension to these
metaphors that attempts to make network resources appear similar to
local resources.  this has already been done to some extent with
prporietary networks and research prototypes, but not specifically with
the web.

what we've envisoned is consistent with standalone computer desktops.
we need however to address network delay and reliability in accessing network
resources.  in what way would a user accept asynchronous activities
(for example, would it make sense to delegate something to an "agent"
or dispatch it, and ask for an interruption upon completion?).

this approach retains the key problem interfacing with a large or deep
hierarchy.  items deep in the hierarchy are hard to see.  a "find file"
or "search" tool is usually provided to help users find what they have
buried.

in class we mentioned several metaphors for web access that differ
greatly from the desktop metaphor:  the web as an ocean, the web as a
highway, for example.  we discussed these metaphors and decided that
they have more use as metaphors for navigation and browsing (e.g. "fishing",
"trawling", "wandering", "road trip").  when applied to organization
problem, they don't appear to offer assistance.  in real life we cannot
arrange the ocean or the interstate highway system to suit our own
needs.



summary

we have discussed several extensions to this approach:

the drag-and-drop mechanism could be used to connect documents and
objects to services.  the objects and the services could be local or
remote.  example objects include movies, audio, pictures, spreadsheets
and commodities for sale.  services could include viewers, word processors,
spreadsheet applications, mailers, printers, fax software, shopping and
purchasing software, and personal organizers.
the web information structure could be extended to support these
additional object types.  this would associate services with objects
similar to the mime concept.  default operations for direct manipulation
could be associated with the service/object combination.
the desktop appears to be a suitable way for users to organize their
personal views of the web.  but it does not seem to provide an ideal
metaphor for exploration or navigation.  metaphors appropriate for
explorations are still needed.
the interface could support personal annotations by overlaying the
document page with "post-it" type annotations that could be stuck anywhere
on the document.  these would be associated with, and accessible from,
the document icon.  they would be stored locally and attached whenever
the document was referenced.

our approach could suggest modifications to the web information structure
and html.  authors and users often collect links into a page that
acts as a directory or folder.  often these pages have no content of their
own, or may contain personal annotations.  what if html were extended
to incorporate directories or folders (instead of logical types like
ordered and unordered lists)?  browsing software and viewers could then
support presentation metaphors suited more for organiztion than for
reading.  as an extension it would neither force authors to use it nor
viewing software to present it differently from a document.
we feel that web viewing software can be easily enhanced to support
dynamic, personalized organization.  leveraging existing desktop software
is a natural way to do this.



joseph m. sherman
last modified:  friday, may 5th, 1995.




cse 590h course project: 


cse 590h course project: 


cse 590h course project: 


cse 590h course project: 


cse 590h course project: 


cse 590h course project: 


cse 590h course project: 


cse 590h course project: 


cse 590h course project: 


cse 590h course project: