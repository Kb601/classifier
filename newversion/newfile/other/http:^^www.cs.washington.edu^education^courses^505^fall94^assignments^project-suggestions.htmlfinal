cse 505 projects



cse 505 projectsautumn 1994



the 505 project should involve writing a 4-10 page paper on a topic related
to programming language design and implementation, and may also involve a
programming project.  students can work individually or in pairs on the
project and paper.  optionally, students can give a presentation in class
on their work.  (more work will be expected of a pair than an individual.)

if you do an implementation project, it can either be something like
implementing an sk-reduction machine, or implementing some program in
language x.  if the latter, your paper should discuss not just the
particulars of the project, but also what the relevant special features of
x are, and how they helped and hindered the development.  perhaps better,
implement it in both languages x and y and compare.

a brief project proposal is due on november 21 (by e-mail).  the project is
due the last day of class, dec 7.


here are some suggestions for possible projects.  naturally you aren't
restricted to these suggestions, but can work on a different topic if you wish.

 

 functional programming:
  
   implementing an sk reduction machine
   haskell design; differences from miranda and other functional languages
   supercombinators and the g machine 
   strictness analysis
  

 procedural languages (algol descendants, c-like languages, etc).
  
   cove ... from craig chambers: "a potential 505 project might be to
refine the current cove language design.  cove is a type-safe dialect of c.
we'd like someone to work out the precise details of the casting rules and
the type parameterization structure to ensure type safety cannot be
circumvented."
  

 languages for concurrency 
(see the 590l topics this quarter)

 object-oriented programming
  
   cecil (could include an implementation project in cecil)
   hermes
   type systems for object-oriented languages
   compilation techniques
   meta-object protocols and reflection
   beta (an object-oriented language with a single abstraction mechanism)
   concurrent object-oriented languages
   eiffel
  

 logic programming; constraint programming
  
   strand (perhaps including an implementation project)
   a survey of concurrent logic programming
   kaleidoscope.  (this is a locally grown constraint imperative
programming language.  we'd like to have one or two people write some
sample programs, help debug the compiler, and explore the programing style.
could evolve into a quals project.)
   constraint logic programming
   concurrent constraint programming -- either a survey, or using a
    language such as akl
   the oz language
  

 other
  
   social and political aspects of programming language development
   continuations
   persistant programming languages
   visual languages (e.g. prograph, visual basic, component-based
       programming) 
   scripting languages
   language support for atomic data types
  






 cse 505 projects
 cse 505 projects
 cse 505 projects
 cse 505 projects
 cse 505 projects
 cse 505 projects
 cse 505 projects
 cse 505 projects
 cse 505 projects
 cse 505 projects