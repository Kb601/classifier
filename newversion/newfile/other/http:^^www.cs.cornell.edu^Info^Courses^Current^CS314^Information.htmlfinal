cs314 course information




cs314 course information
http://www.cs.cornell.edu/info/courses/current/cs314 


the most up to date version of this document is in the course materials
found on conote
people
instructor

thorsten von eicken, upson 4124, 255-9188, tve@cs.cornell.edu, office hours: tue 2:45pm-3:45pm

teaching assistants

aaron thomas deever, rhodes 657, 255-8272, atd4@cornell.edu, office hours: tbd
zhen xiao, upson 4132, 255-1179, xiao@cs.cornell.edu, office hours: tbd
michael korby, upson ???, 255-????, mkorby@cs.cornell.edu, office hours: tbd

consultants

consulting help is available in upson 309.

course administrator

laurie j. buck, upson 303, 255-3534, office hours: mon-fri, 1:30 - 4:00 pm


what &amp; when
lectures


tue/thu 1:25-2:40pm kimball b11 



sections


mon 7:30-8:20 pm, hollister 372
tue 3:35-4:25 pm, comstock b108
wed 7:30-8:20 pm, hollister 372



attending sections is required! new material will be presented that you will need to know in order to complete 
the homeworks and the projects. 
attend one section each week. sections will begin the second week of classes. you may attend any of the sections, 
regardless of your registration. however, it would be helpful if you attended the same section each week. 
tutoring
the course tas will be available during regular office hours for extended consulting help. schedule an appointment by 
sending email to the ta at least 24 hours in advance. if you do not schedule an appointment, you may find the ta busy 
and, thus, unable to spend time with you. 
consulting
consulting help is available in upson 309. the hours have not yet been finalized. 
consultants will grade your homeworks as well as answer questions about the computer system, programs, homework 
assignments, and other things related to the content of the course. to help ensure that consulting time is used to best 
advantage, we ask you to observe a few ground rules: 

when your program doesn't work, try to decipher the error message, find the location of the error in your listing, and 
look at the relevant registers and memory before seeing a consultant.

have a current listing of your program written in good style to show to the consultant. consultants will not spend 
time attempting to trace uncommented code. 

plan to spend no more than 10 to 15 minutes of the consultant's time. if you need more time, then set up an 
appointment with the ta. 


texts and references
most of the information relevant to the course will be handed out in the form of lecture notes. you are required to buy one 
textbook, which is actually a manual for the powerpc 601 and is rather cheap. we recommend the patterson &amp; hennessy 
textbook because it is very good and you will refer to it many years hence to remind you of how processors, memories, 
caches, disks, etc. work. however, that book uses a different processor and there isn't a 1-1 correspondence between 
lectures and sections of the book. for this reason it is not required. some people like to sit down a read a book in order to 
learn, or in order to find out more, and the book works well for that. others like to review the lectures using a textbook, 
and this book doesn't work for that. it's your call.
required

cs 314 lecture notes. available on-line through the course home page. 

motorola/ibm, powerpc 601 risc microprocessor user's manual, motorola catalog #mpc601um/ad or 
ibm catalog #mpr601umu-02).available in the bookstore, should be cheap. 


optional

patterson and hennessy, computer organization and design, morgan kaufmann, 1994. available in the 
bookstore, expensive but very good. 

bartee, computer architecture and logic design, mcgraw-hill book company, 1991.useful if your have 
difficulties with boolean algebra. 

ibm, the powerpc architecture, edited by c. may, e. silha, r. simpson, and h. warren. morgan kaufmann, 
1994. expensive, luxurious, not clearly better than the cheap ppc601 user's manual, but a little more 
general. 

metrowerks codewarrior, academic edition.c/assembler development environment. available for $100 at the 
bookstore in case you have a ppc and want to work at home. 



lecture notes, homeworks, projects, exams, and grades
you will have weekly homework assignments and five two-week projects. strong emphasis will be placed on timely 
completion of the homeworks and projects! we will use a merit/demerit system (see below) to encourage this. if you 
cannot meet the due date of an assignment because of serious illness or other extraordinary circumstances use the 
merit/demerit system to catch up. if you really, really need an exception, contact brian before the assignment deadline for an 
extraordinary extension. 
primary source
the primary source for lecture notes, informational handouts, and assignments will be on-line on the web (url: 
http://www.cs.cornell.edu/info/courses/current/cs314). we will update the on-line versions if errors are discovered or 
assignments need clarification. the on-line system will permit you to make annotations to lectures and assignments allowing 
you to ask questions and see responses. in order to be able to reach the on-line course materials you need to sign up with 
the web page annotation system called conote. signing up with conote is what homework 1 is all about: you should go 
back to the course home page and click on the &quot;course materials&quot; link. you will be asked an id and password, just click 
cancel and then fill out the form that pops up. then you get what looks like a nasty error message, but in fact it's a page that 
allows you to request student access level (talk about friendly user interface...). simply click on the &quot;request student 
access level&quot; button and you're almost done. almost, because you now get to enter the id you just chose with the 
password. after all this you should get a message that indicates that you now have permission to author annotations. (hint: 
click on file&gt;newwebbrowser in netscape now to get a new window to follow these instructions, this way you don't 
loose the instructions from sight.) 
you are responsible for checking the on-line version for changes up to 24 hours before you hand-in an 
assignment! if we make a change and you didn't take it into account because you didn't check, it will be your 
problem. 
you are not responsible for changes to an assignment after you have handed it in (e.g., should you hand in something early). 
prerequisites
cs211 or equivalent. students are expected to have programming experience using c. if you know another programming 
language (e.g., pascal) you are expected to acquire c expertise on your own. we will assume familiarity with recursion, 
arrays, records, pointers, linked data structures, and stepwise refinement. 
homeworks
homeworks will be handed out thursdays and be due at 9pm the following thursday. they will be relatively simple and 
allow you to check whether you understood the material presented in lecture and section. 
the homeworks will be graded on the spot by the course consultants. you will not be allowed to drop homeworks off: 
you have to have them graded on the spot! the crunch tends to come around thursday, 9pm, so if you want to avoid 
waiting, you should turn your homework in early and get extra merits. also, be sure not to miss the consulting hours! 
answer sheets for all homework assignments will be distributed one week after the assignment is due. these should be 
studied and understood. homework questions have been known to reappear on examinations. 
projects
projects will be handed out tuesdays and be due two tuesdays later. the second an third projects will be centered around a 
subset of the powerpc assembly language called ppc314. 

in the first project you will write a small assembler program. 

in the second project you will write a pppc314 machine language simulator in c. 

in the third project you will build a ppc314 cpu in three phases: 

phase1: datapath logic
phase 2: datapath implementation, control logic
final: all implemented and working



you will work in groups of two on all the projects (no exceptions, unless there is an odd number of students). when 
working in a group, submit for grading a single printout that includes the names of both students in the group. the same 
grade will be given to both students. both students are expected to be equally able to answer questions about the program 
or project. 
the projects will be graded on the spot by having you demonstrate them to a ta or course consultant. sign up sheets for 
these demos will be available later. 
exams
there will be two prelims, one on 10/17 at 7:30pm, and one either 11/21 or 11/14 (not determined yet) at 7:30pm. there is 
no final exam. 
grade computation
your course grade will be computed as follows: 


10% - first prelim, (curve) 
10% - second prelim, (curve) 
10% - homeworks, (absolute) 
10% - 1st project (asm programming), (absolute) 
20% - 2nd project (simulator), (absolute) 
30% - 3nd project (hw, design, 3 parts), (absolute) 
10% - merits/demerits 



merits/demerits
we designed the merit/demerit system to allow you some flexibility in turning in your assignments. here's how it works: 

homeworks or projects will be accepted up to 3 calendar days late (e.g., 'til sunday for homeworks), but each day 
will result in one &quot;demerit&quot;. 

homeworks or projects will also be accepted up to 3 calendar days early (e.g., starting monday for homeworks), 
and each day will work off one demerit (or give you credit for the future). 

each demerit left at the end of the course will cost you 0.5% of your grade (almost 1/2 a homework). if, at any time 
you reach 20 demerits (there goes 10% of your grade!), you will receive a harsh ultimatum... 

by being on-time on average, you earn 10% of your grade! extra merits will only affect your grade if you are on the 
boundary between two grades (no guarantees, though). 

merits and demerits are personal: a group project that is late costs each member. 


grading and regrades
grades will be posted (indexed by a secret id number you provide) on the web. if you believe that we have made a 
grading error, please first discuss the matter with one of the course consultants or teaching assistants. if, after such a 
discussion, it appears that a mistake has really been made, bring the error to our attention, but no later than one week after 
your assignment has been returned. to submit a problem set, program, or exam for regrading, obtain a regrade request form 
from one of the consultants or from outside upson 303. fill out the request form, and leave the request along with the 
assignment in question in upson 303. a regrade request can cause your grade to go up or down. regraded assignments 
will be returned by the course consultants. 
academic integrity
the work you submit in cs 314 is expected to be the result of your individual effort. you are free to discuss course 
material, approaches to problems, and details of the system with your colleagues, instructors, and computer services 
consultants, but you should never misrepresent someone else's work as your own. permissible cooperation should never 
involve a student possessing a copy of all or part of another student's program or other work regardless of whether that 
copy is on paper or in a computer file on a hard disk or a floppy disk. the only exception to these rules is when two 
students work together to submit a joint project. 
it is also the student's responsibility to protect his/her work from unauthorized access. for example, do not discard copies 
of your programs in public places. 
violation of the academic integrity code very often results in failure in the course and permanent notations on your 
cornell academic records. if you have any question as to what constitutes ethical behavior, ask the instructor first we will 
not be sympathetic to claims of ignorance or misunderstanding of the rules. 




cs314 course information
cs314 course information
cs314 course information
cs314 course information
cs314 course information
cs314 course information
cs314 course information
cs314 course information
cs314 course information
cs314 course information