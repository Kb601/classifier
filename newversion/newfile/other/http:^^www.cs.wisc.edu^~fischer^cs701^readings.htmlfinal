cs 701 reading assignments and  research papers 
reading assignments


sept 3 (lecture 1)


get class handouts 1 and 2 from doit.

read section 15.6 of chapter 15 (from handout 1)

read davison & fraser paper ("retargetable peephole optimization")

read  project 1  assignment.


sept 17 (lecture 5)


get class handout 3 from doit.

read davison & fraser paper ("code selection through object code optimization")


sept 19 (lecture 6)


read section 15.1 of chapter 15 (from handout 1)


sept 24 (lecture 7)


read section 15.2 of chapter 15 (from handout 1)
 
      efficient instruction scheduling for delayed-load architectures 


sept 26 (lecture 8)


read section 15.4 of chapter 15 (from handout 1)

read chaitin's paper ("register allocation via coloring")

read  project 2  assignment.


october 3 (lecture 10)


read hennessy & chow's paper ("priority-based coloring")
 
               iterated register coalescing 


october 8 (lecture 11)

 
     register allocation via hierarchical graph coloring


october 10 (lecture 12)


read wall's paper ("global register allocation at link-time")
 
               minimum cost interprocedural register allocation 


october 15 (lecture 13)


read gibbon's & muchnick's paper
("efficient instruction scheduling for a pipelined architectire")


october 17 (lecture 14)


read goodman & hsu's paper
("code scheduling and register allocation")

get bernstein & rodeh's paper
("global instruction scheduling") from doit.


october 24 (lecture 16)


read section 15.5 of chapter 15 (from handout 1)
 
 burg -- fast optimal instruction selection and tree parsing 
 
 engineering a simple, efficient code generator 


get handout #5
("automatic program optimization") from doit.






 suuplementary information and research papers 


 
  	 
               sparc architectures 
  	 
               summary of sparc architectures 
  	 
               demand driven register allocation 
 
               instruction scheduling and executable editing 
  	 
               corpus-based static branch prediction
  	 
               burg -- fast optimal instruction selection and tree parsing 
  	 
               engineering a simple, efficient code generator 
  	 
               automatic program optimization 
  	 
               data flow frequence analysis 
  	 
               lazy code motion 
  	 
               partial dead code elimination 
  	 
               the power of assignment motion 
  	  
               integrating non-interfering versions of programs 
  	  
               low-cost, concurrent checking of pointer and array
	       accesses in c programs
	 
		fast, effective dynamic compilation



---------------------->
 




 cs 701 reading assignments and person person
 cs 701 reading assignments and person person
 cs 701 reading assignments and person person
 cs 701 reading assignments and person person
 cs 701 reading assignments and person person
 cs 701 reading assignments and person person
 cs 701 reading assignments and person person
 cs 701 reading assignments and person person
 cs 701 reading assignments and person person
 cs 701 reading assignments and person person