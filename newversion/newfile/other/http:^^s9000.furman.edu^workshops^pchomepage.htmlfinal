authoring world wide web home pages (pc users)authoring world wide web home pages on a pcthis page is maintained and supported by kevin treu of the department of computer science.  please feel free to write at treu_kevin/furman@furman.edu with questions and/or suggestions.overviewby this time you have probably had some experience with basic "web surfing" using netscape, and thus can appreciate the amount of information that is "out there" and easily accessible.  what makes the web truly exciting, however, is the ease with which we can contribute to it.  in this workshop, we will explore firsthand the basics of the hypertext markup language (html) used to create home pages, see how to include digitized images and find out how to load pages so that they are accessible to the entire internet community.1. introducing the concept of html	the process of producing pages for the web is surprisingly simple.  once you become familiar with some of the basic concepts, you'll find document preparation for the web as easy as you presently find word processing.  (hopefully that's a good thing!)  home page authoring employs the hypertext markup language (html).  we'll address the meaning of the "hypertext" part shortly.  the "markup" part is the key to the simplicity of html.  what it reveals is the fact that documents are created by merely adding special characters--called tags--to basic text files.  that is, by "marking them up."a.	to begin, start up netscape and find any page of interest.  the page you go to first will do.  select source from the view menu.  you will suddenly find yourself looking at a screen full of characters, some of which probably look familiar to you, others of which probably do not.  what you are looking at is the html file which is processed by the netscape program to create the page you were looking at when you executed the source command.  our goal is for this page to make perfect sense to you by the end of the workshop.	let's start to explore this language.  in the first part of our workshop we'll create a sample personal page on your diskette.  (alternatively, you can work on the hard disk of your computer, but for obvious reasons you shouldn't do this in a public lab.)b.	create a subdirectory on your diskette called web.  use the windows utility notepad to begin editing your home page.  save it in the web directory under the name index.htm, for reasons that will be explained later.  (save it on your diskette, not on the hard drive in the lab.)  the contents should be simple text, including:your name on the first lineyour class year and major on the secondyour campus address, phone number and e-mail address on subsequent linesa list of your classes for this terma paragraph describing your extracurricular activities and interestsnote:  any word processor would be suitable for this purpose, as long as you can save files in text-only (ascii) format.  the key is that you not have all of the special control characters which regulate margins, indenting, fonts, styles, etc. in a word processor, but have no meaning on the web.c.	when you are through editing the file, save it and start up netscape.  (note that you can keep both netscape and notepad running at one time.  just use the alt-tab key sequence to toggle between running applications.)  now we'll see what the fledgling home page looks like.  go to the file menu and select open file.  the resulting dialog box permits you to open any file on your pc disk as an html document.  navigate to your diskette and open index.htm.	kind of a mess, right?  notice that netscape ignores all tabs, carriage returns, sequences of spaces, etc.  it simply takes the characters you have produced and runs them all together.  so what is to be done next?  marking up the text with tags, of course!	before we proceed, we should discuss the fact that html is indeed a limited language at the present time.  don't expect to be able to do all kinds of fancy formatting like you can with a word processor.  that's just not what html is for, at least in its current incarnation.  (version 3.0 of html, due out soon, will have some pretty nice new features though.)  however, as you probably already know from your web explorations, some fairly eye-catching presentations can be created.  let's start to see how.2. beginning html tags	almost all html tags have the following format:		&lt;tag&gt; text, possibly including other tags &lt;/tag&gt;as we'll see, there are some notable exceptions, but in general you should always think of tags as coming in pairs.  the first set of tags we'll consider are general structure tags.  these are used to identify certain parts of your document.  though not strictly required by all browsers, they reflect good html style and so we'll start with them briefly.  the structure tags include:html: used to bracket your entire documenthead: identifies the prologue of your file, typically including the titlebody: identifies the main content of your documentd.	change the context from netscape to notepad to edit your file.  edit it so that it looks like this:&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;what you've written so far&lt;/body&gt;&lt;/html&gt;e.	next, add a title.  every web page needs a brief, descriptive title.  this is what becomes accessible to various web searchers, identifies pages stored in bookmarks lists and the go menu, and is displayed at the top of the netscape window when accessed.  this uses--you guessed it--the title tag (&lt;title&gt; title of your page  &lt;/title&gt;).  it is placed between the head tags.  edit your file to include an appropriate title, such as "jane doe's personal page".  don't forget to save the file.f.	switch back to netscape to view the page again.  when you are in netscape, click on the reload button.  this will cause the changes you have made to take effect.  you won't notice much different this time, except that now the title is included at the top of the netscape window.	now let's start making the page a bit more presentable.  to start with, we would certainly like to separate logically related passages of text from one another, probably identifying them with appropriate subtitles.  (just like in an outline of a paper.)  the heading tags (h1, h2, ..., h6) take care of this nicely.g.	surround both your name and class year with a h1 tag pairs, for example:				&lt;h1&gt;jane doe&lt;/h1&gt;		&lt;h1&gt;junior, english major&lt;/h1&gt;			proceed by placing subtitles in your document for each section using h2 headers:				&lt;h2&gt;address information&lt;/h2&gt;		address stuff you wrote before		&lt;h2&gt;class schedule&lt;/h2&gt;		class stuff you wrote before		&lt;h2&gt;activities and interests&lt;/h2&gt;		activity stuff you wrote before			save your file and use netscape once again to check out your document.  (use the reload button.)  that's a little better!  note that the heading tags are numbered according to size, with the "level one" (h1) tags the largest and the "level six" (h6) tags the smallest.  effective outline-style presentations can be easily constructing using these.  try experimenting with some different sizes.	turning our attention to the specific contents of each section of our document, we would at least like to separate lines of text from those we intended to be on different lines.  two tags--both notable examples of tags which do not come in pairs--are used for this.  they are the p (paragraph) and br (line break) tags.  whereever they are placed in a document, they cause the character immediately following to begin on a new line.  in the case of the paragraph tag, there is a blank line inserted before the next character is displayed.  the line break tag simply causes the new text to be on the very next line.h.	insert line break tags after each line of your address/phone number information, and after each of your classes.  after the last item in each section, insert a paragraph tag.  for example:				room number&lt;br&gt;		box number&lt;br&gt;		phone&lt;br&gt;		e-mail address&lt;p&gt;			once again, check out the file with netscape.  things are shaping up!  (note: do not do this with your class or activity information.  we'll get to those shortly.)3. adding links to other documents	so far we've only seen html as a not-very-good word processor.  what makes it special, though, is the ability to include hypertext links in the web pages it produces.  these are the highlighted words (and images) on a page that can take you somewhere else on the same computer, or halfway around the world with a single click.	fortunately, these links are very simply implemented in html.  they employ tags just like we have already seen.  the general format of a link is:		&lt;a href="resource url"&gt;text or image&lt;/a&gt;it's that easy!  now, a basic familiarity with universal resource locators (urls) has been assumed for this workshop.  in brief, however, a url such as this one:		http://s9000.furman.edu/~treu/cheers.htmlbreaks down as follows:				http:// -- identifies the resource to be accessed as a hypertext page		s9000.furman.edu -- identifies the machine address in the internet		~treu/cheers.html -- identifies the path to the resource		there can be numerous variations of urls.  the resource identifier may be other things besides "http" for instance.  (you should notice some other options in your net travels.)  sometimes the path may be omitted, as well as the file name.  this is because certain paths and file names are accepted as defaults by netscape and other web browsers.  we'll soon see what those defaults are for our system.	it is important at this point to note that urls come in two forms: absolute and relative.  the easier of the two to understand is the absolute form.  in short, an absolute url is one that is fully specified, including http:// (or another resource identifier) and the machine name.  the previous example is an absolute url.	specification of urls can sometimes be simplified by using the relative form.  this is possible whenever a link to another resource on the same computer is to be included.  in short, the resource identifier and machine address can be omitted in this case.  as long as netscape can figure out where a resource is--based on where you currently "are"--what you need to specify in terms of a url is minimal.  for example, if i am currently accessing a page in my own directory (~treu) and want to access the cheers page, the relative url simply reduces to 		cheers.html	to simplify matters, just remember this: use relative urls when you are creating links to pages of your own, and use absolute urls when you are creating links to pages elsewhere on the web.	let's add a link or two to your home page.i.	many people include a list of interesting web sites on their personal pages.  let's start such a list on your sample page.  near the end of the file (before the &lt;/body&gt; tag) insert the following:		&lt;h2&gt;links to check out&lt;/h2&gt;		&lt;a href="http://cool.infi.net/"&gt;cool site of the day&lt;/a&gt;		&lt;p&gt;	use netscape to open the file.  you should see the words "cool site of the day" highlighted in blue.  you have created your first link!  clicking on this text should take you to an interesting web site which you have visited before.  try it out.j.	find and write down the urls of other interesting pages and add new links to your list.  you can also make a link out of any text on your page.  see if you can find a web page dedicated to one of your activities or interests and make a key word in your "activity paragraph" into a link to that page.	presumably you will go on to create more pages of your own.  all you need to do is create a file that ends in .htm in your web directory and create a link to it.  for instance, say you create a page containing information about your favorite band.  just store this page as band.htm in the same directory as your index.htm file.  to create the link, all you need is something like this:			&lt;a href="band.htm"&gt;my favorite band&lt;/a&gt;		compare this use of a relative url to the absolute form you have used thus far.  much simpler, right?  that is because band.htm is stored in the same place as index.htm.k.	try this.  create a new page ending in .htm using notepad and save it in your web directory.  the contents of the page are unimportant.  create a link to this new page in your index.htm file and try it out.	we'll soon see that images, and not just text, can be made into links as well.the e-mail link	a popular web page feature is to have a link which allows someone to quickly and easily send e-mail to the author of a particular page.  add one of these to your page.l.	surround your e-mail address with a tag using the "mailto" indicator.  if your name were jane doe, you would add:		&lt;a href="mailto:doe_jane/furman@furman.edu"&gt;doe_jane/furman@furman.edu&lt;/a&gt;4. a bit more html	before moving on to the inclusion of images in your document, lets apply a bit more polish using additional features of html.horizontal rules	you have already separated the different segments of your page using subtitles.  often a non-text separator is also desirable.  it is for just this purpose that html includes a facility for including horizontal rules as dividers.  these are implemented using another non-pair tag, hr, which stands for "horizontal rule."m.	prior to each level two heading (&lt;h2&gt;), include the tag &lt;hr&gt;.  check the effect using netscape.lists	it is probably clear from your web travels and from this workshop so far that information is often best organized into succinct lists.  html provides tags for the implementation of three majors types of lists: unnumbered, numbered (or ordered) and descriptive.  we'll implement the first two today, and leave the third to your reading and experimentation.n.	make your list of classes into an unnumbered list.  the basic tag for such lists is ul.  an additional tag for each list item is required also, and as you might expect, this tag is li.  make changes as follows:						&lt;ul&gt;			&lt;li&gt; class 1			&lt;li&gt; class 2			&lt;li&gt; class 3			&lt;/ul&gt;			o.	next make your list of interesting links a numbered list, using the tags &lt;ol&gt; ... &lt;/ol&gt;  check out the page using netscape.note at this point that there is no problem applying new tags (for the list) around the tags you already used to indicate links.  in general, any number of tags can be applied to the same text, as long as it makes sense to do so.character formatting	some rudimentary character formatting abilities are provided in html, but we won't spend much time on them.  try experimenting with &lt;i&gt;...&lt;/i&gt; and &lt;b&gt;...&lt;/b&gt; tags for italic and bold text, respectively.  another popular feature is the ability to center text.p.	center your level two headers by enclosing them in the tags &lt;center&gt;...&lt;/center&gt;.5. venturing onto the internet	thus far your page really hasn't been accessible to anyone but you (and that's probably just the way you want it right now!) because it is stored on your diskette, which is not accessible from the internet (since it isn't running a web server).  to change this, you will have to "upload", or copy, your page to a computer which does have a web server running on it.  in the next activity you will learn how to do this.  for the moment, however, we'll keep things simple and keep them on your diskette.6. using images	finally, let's add an image to your page.  images that are interspersed with your text are called in-line images.  (more on other types of images later.)  a special kind of tag, called img, is used to include these.  this tag uses the following basic format:		&lt;img src="url for image"&gt;	let's add a picture to the beginning of your page, just before your name.	the first thing you will need, of course, is a digitized image of some kind.  fortunately, these are easy to come by.  any image that you find displayed on the web can be downloaded to your diskette and re-used.  to see how it's done, let's get a copy of the furman masthead from the furman university home page.q.	first use netscape to access the furman home page (http://www.furman.edu/).  the masthead image is at the top of the page.  to get a copy of it, simply click on it using the right mouse button and hold the button down.  a menu will pop up on the screen.  select save this image as.  you will then be presented with a dialog box like those you have seen before.  navigate to your web directory and save the image.  it's as simple as that!	now add the image to your own page using the img tag described above.r.	edit index.htm to include the line	&lt;img src="furman.gif"&gt;&lt;br&gt;	right after the &lt;body&gt; tag.  once again, open your page using open file in netscape to check out the new image.note:  other options for the img tag include align and alt.  the former defines how an image is to be positioned relative to surrounding text if they are interspersed.  the latter defines a textual substitution for the image in the event your page is being read by a text-only browser, such as lynx.  in the interests of time, we'll omit these options today.  consult an html text or ask me if you'd like to know more though.other sources of images	there are numerous sources of "generic" images that you can use to make your pages more visually appealing.  these include buttons, icons, fancy lines, backgrounds, etc.  remember that anything that you can view using netscape-- anywhere in the world--can be downloaded and use in your own pages.  take advantage of this!	in addition, you can create your own original digitized images using a drawing or painting tool.  finally, you can digitize existing images with the use of a scanner.  an accompanying workshop describes how to make use of this technology.	as mentioned earlier, hypertext links need not always be text.  we can make the furman masthead image into a link to the furman home page simply by including the url for the image inside the tag for a link.s.	modify the img line you just added to read					&lt;a href="http://www.furman.edu/"&gt;&lt;img src="furman.gif"&gt;&lt;/a&gt;			test the "image link" using netscape.t.	repeat the image-copying exercise by copying an interesting separator-line image from the web.  two good sources for these arehttp://www.widomaker.com/~spalmer/lines/solid/index.html	andhttp://www.widomaker.com/~spalmer/lines/textured/index.html	pick one and copy it to your directory.  to use it, replace the hr tags (horizontal rules) in your file with the appropriate html line.  (this is a good test of whether or not what you've done so far makes sense.)	in general, in-line images should be used with careful thought.  cluttering your pages with too many images can not only be unattractive, but a source of considerable inefficiency for those trying to access your page.backgrounds	suitable images can be used as backgrounds to your pages to make them more eye-catching.  repositories of these images can be found all over the web.u.	access the locationhttp://www2.netscape.com/assist/net_sites/bg/backgrounds.html	select one of the background patterns and copy it to your diskette as you've done twice before.  for a file called background.gif, change the body tag in index.htm to read				&lt;body background="background.gif"&gt;			use netscape to see the effect of this simple change.7. advanced topics	though we have (hopefully) laid a strong foundation for understanding html and writing multimedia, hypertext web pages today, there is a lot to html and the web that we are omitting, including the use of images, sounds and movies as external resources, writing fill-out forms and "clickable" imagemaps, incorporating other internet tools such as e-mail, ftp, gopher and news, along with various and sundry small features of html.  maybe we will have a follow-up lab to cover some of these topics, but in the meantime you have access to various html textbooks and the best teacher of all--the web itself.  	just as we can access images from other pages, we can access html ideas too.  use the source option of the view menu regularly.  if you see something interesting and you would like to know how to accomplish it, you know how to get a look at the html code itself!  if you see an appealing page layout somewhere, save a copy of the html source to use as a template, filling in your own information where appropriate.  	there is no substitute for experience and experimentation when it comes to learning html.  we'll try to build some more experience in our afternoon session today, but i hope that you'll continue to explore after this workshop concludes.8. html editors	you will not always have to do your web authoring using the "gory details" of html as described in this lab.  already there exist several html editors which, like word processors, allow you to create web pages using the "what you see is what you get" concept.  as your interest in creating web pages grows, you may want to check some of these out.  ask me about finding a good editor if you like.9. more information	with this workshop (and maybe a suitable textbook), you have a great deal of information about html and the web to digest.  a lot more can be found on the web itself.  just to point you in a couple of productive directions, i suggest you look up the following:ncsa beginner's guide to html 	http://www.ncsa.uiuc.edu/demoweb/html-primer.htmlbob allison's webmaster's page	http://gagme.wwa.com/~boba/masters1.htmlthere are many others as well.  i have found these two to be particularly helpful as starting points in my own learning process, however.next: putting your home page on the web
authoring world wide web home pages (pc users)
authoring world wide web home pages (pc users)
authoring world wide web home pages (pc users)
authoring world wide web home pages (pc users)
authoring world wide web home pages (pc users)
authoring world wide web home pages (pc users)
authoring world wide web home pages (pc users)
authoring world wide web home pages (pc users)
authoring world wide web home pages (pc users)
authoring world wide web home pages (pc users)