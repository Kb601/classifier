plinda: 







persistent linda: faq




most of these questions are for running plinda.

 you are run pl and it says cannot find correct type for your
machine. edit the file pl and check that the switch constants
are correct for your machine --- maybe you are running on linux2.x
and the switch we have for linux is linux1 so you just need
to change the 1 to a 2.


 the system freezes after clicking on the boot button of the
   system from the user interface.

   you will need to rlogin into the machine you ran pl from and
   kill the process called plm.
   this problem is caused by one of three problems:


    .rhosts file does not contain the machine you are running pl from.
    you do not have write permission to the directory you are running pl
      from and therefore the server is blocking. or the file system is too full.
    there is no executable for the server for the architecure you are
      running pl from or you don't have permission to run it.
      check the file ~/plinda/bin/sunos/plinda_server 
      (change sunos to solaris or hpux depending on your machine type).





     do not use the exit function inside of plinda source code.
     instead use pl_exit(int val) which will inform the runtime
     system that the program is gracefully exiting rather than
     an exit due to a failure.


 the system is not able to start daemons on remote machines when
   you add them to the host pool.

   check that the .rhosts file has the machine you are running the server
   on in it.

   check that you can execute the daemon for that machine type
   that is the file ~/plinda/bin/sunos/plinda_daemon
   (change sunos to solaris or hpux depending on your machine type).

 you cannot see your applications in the application select box of the
   user interface.

   this is probably because they do not have the .exe extension or
   they are not readable.

 compilation of your program is deadlocked.

a common error is that you don't have the right parameters in real_main(...).
a correct real_main(...) should look like this: real_main(int argc, char **argv, char **env).
 
 the system is not able to start applications after clicking on them.

the applications are not readable or you have not compiled them for
all the machines in your host pool. this is very important since the
system may try to run an application on any machine in the pool.
or you need to give the system permission to start an xwindow for the
application. type "xhost +" on the console of the machine 
you are sitting at.



for plinda2.1a if arg_rdp is called with a tuple pattern that does not
match the eval tuple, an assert will fail in the server.
this has been fixed.


     when compiling, you get the message tclmain.o (tkmain.o resp)
     and tkmaintk3.6.o main multiply defined.  this is because
     some linkers will pick up all functions rather than just the
     first. this can usually be fixed with the right flags passed to
     c++ which will pass them to ld or you can copy the libtcl.a
     and libtk.a libraries to a private directory, and do
     ar d libtcl.a tclmain.o and ar d libtk.a tkmain.o which will
     remove the mains from these two libraries. make sure to
     modify the makefile by changing tcl_library and tk_library to
     pick up the new versions. if you still get this problem,
     make sure the tcl_library and tk_library are before any others
     in the link line of obj/makefile.


     when compiling there are warning messages (1) can't convert const
     gid to gid & in plinda_lib.c, (2) implicit declaration of index,
     (3) comparison between signed and unsigned in the gnu directory,
     and (4) long format used for int in the monitor directory.
     these are ok and should be fixed soon.



 back to plinda homepage.



last modified by 
bin li.
january 21, 1995.





 plinda :
 plinda :
 plinda :
 plinda :
 plinda :
 plinda :
 plinda :
 plinda :
 plinda :
 plinda :