cse 143 turn-in policy


cse 143 turn-in policy






this document explains the turn-in policy that will be used for cse
143 this quarter.  on all programming projects, you will be required
to turn in two things: a hard copy of your solution, and a copy on
3.5" disk.  the hard copy will allow the tas to scribble comments on
your code and output, and write down your grade.  the disk will be
used to run your program and verify that it works.  each component is
explained in more detail below.



hard copy

in general, the submitted hard copy should contain (i) a cover sheet,
(ii) your code, and (iii) output showing the result of running your
program on a few well-chosen test cases.



cover sheet -- this should be a concise explanation
of the stack of paper you're giving us: if there are multiple files,
what part of the program is located in each one?  what test cases did
you run, and why did you choose them?  think of this as a roadmap that
your ta can use to decipher this stack of paper you're turning in --
something that can be quickly scanned to get an understanding of
what's to come (note that if you're well-organized, this can double as
your readme file, as explained below)

code -- your code should be fully commented so that it's
clear what each function does: what its preconditions, postconditions,
and invariants are.  essentially, what does it do.  in addition, each
source file you turn in should have a short explanation at the top
indicating what code is in that c or header file.

test cases -- on most projects, we'll supply you with a few
test cases to run your program on, and will ask you to create a few of
your own, to demonstrate an interesting aspect of your solution.  you
should supply output of your program running on our test cases
(labelled to indicate which test case it was), as well as any
interesting test cases that you created, and their associated output.
be sure to attach a sentence or two explaining what your test case
demonstrates.




disk

the disk you turn in should be labelled to indicate which of the four
supported platforms it should be run on:


 macintosh with symantec c++
 pc under windows 3.11 with borland c++ v4.5
 pc under windows 3.11 with msvc++ v1.51
 unix with g++


remember that if you develop on another platform, it is your
responsibility to make sure that your source code works on one of the
supported platforms before submitting it, and that you supply us with
an executable for the supported platform.

the disk should contain the source code, test cases, output from the
test cases, and executable that make up your program.  in general,
this will mean copying the folder or directory that you're working in
onto the floppy disk.  since this will typically involve many files,
you should place a readme in the disk's top-level directory,
explaining what all the files are.  if we can't find them, we can't
grade them.  a sample readme is located here, although any format is fine as long as it
expresses the important information concisely.

in general, we should be able to just pop in your disk, consult your
readme file, and run the program.  in addition, you should supply
everything that is required to build the executable (although we
shouldn't ever have to do so, since you've supplied a copy of it).

unix users: since most unix machines don't have a floppy drive
attached to them, your best bet is to tar up your working directories,
ftp them to a mac or pc, and save them to disk.  your readme should
make it obvious how to reverse the process.  you should also specify
what machine your executable was made on.  if you'd like to discuss
alternate turn-in arrangements, please consult with your ta.


other questions?

if you have other questions about the turn-in, procedure, please
discuss the details with your ta.




cse143-webmaster@cs.washington.edu




 cse 143 turn-in policy
 cse 143 turn-in policy
 cse 143 turn-in policy
 cse 143 turn-in policy
 cse 143 turn-in policy
 cse 143 turn-in policy
 cse 143 turn-in policy
 cse 143 turn-in policy
 cse 143 turn-in policy
 cse 143 turn-in policy