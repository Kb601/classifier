concepts in programming languages. syllabus

		
		
cla cs320  
concepts in programming languages, fall 1996 



the goal of this course is to provide students with a good grasp of
the structure of computer languages, which in turn provides the tools
for the students to master new languages easily.  this course covers
the principles underlying all programming languages and their
implementations.  we will apply the concepts and principles to object
oriented languages, functional languages, logic programming languages,
and network programming languages.  specifically, we will use java and
its language processors to illustrate these principles when they are
applied in practice.

the core topics include: language specification, objects, expressions,
control and types.  we discuss the concrete aspects of each topic
followed by implementation strategies and the related semantic issues.
we will use examples in java, javascript, c, c++, fortran, pascal,
ada, cobol, and other programming languages.



course home page: 
http://www.cs.bu.edu/faculty/mcchen/cs320-96/index.html
textbooks


the java programming language  by ken arnold and james
gosling, in the java    series. addison wesley.
the anatomy of programming languages by alice e. fischer and
frances s. grodzinsky, prentice hall. 
references: the java application programming interface, volume 1 & 2.
 by james gosling, frank yellin and the java team. addison wesley.

prerequisites 

cla cs112 or cs113. cla ma 293 is recommended. 
classroom 
 mcs b33. 
instructor 
 marina chen, mcs 140 e. 
class hours 
 9:30am - 11am tuesday and thursday. 
office hours 
 11am - 12pm tuesday and thursday. 
class newsgroup and email 
 please read cs320 newsgroup and your email daily. 


 

 schedules

9/3
 introduction; nature of language; representation and abstraction
(topics 1, and 2)

9/5
 elements of language.  (topics 3, 1a, and 10a)

9/10
 elements of language.  (topics 3, 1a, and 10a)

9/12
 a quick tour of java and html (topic 1a) 

hw1. due friday 9/20/96

9/17
 formal description of language: syntax (topics 4)

9/19
 formal description of language: lambda calculus (topics 4)


9/ 24
control structures.  (topics 5, 16,  6a, 7a)
hw2. due wednesday 10/2/96 


9/26 
primitive types.  (topics 6, 2a) 

10/1 
expression, functions, and methods. (topics 7, 2a, 5a)

10/3 
advanced data types (topics 8, 3a, 4a)

hw3. due friday, 10/11/96 

10/8
modeling objects.  (topics 10, 2a)

10/10
classes and objects (topics 9, 2a)

10/15 
monday schedule, no class

10/17 
modeling objects. dynamic storage management (topics 10, 2a)

10/22
dynamic storage management (topics 10, 2a)

10/24 
names and binding; scope of a name. (topics 10, 3a)

10/29 
mid-term examination 


10/31
names and binding; scope of a name. (topics 10, 3a)

11/5 
final project topic discussions

term project abstract due tuesday 11/19/96

11/7 
runtime environment: program life cycle 

11/12 
review midterm
runtime environment: java vm and runtime

11/14 
concurrency and multithreading  (topics 13, 9a)

11/19 
concurrency and multithreading  (topics 13, 9a)

11/21 
produce animation in java
hw4. due thursday 12/5/96 

11/26 
i/o and gui: java awt package

11/28 
thanksgiving recess

12/2 
term project progress report due on monday, 12/2/96. 

12/3 
term project presentation and
demonstration  1

12/5 
term project presentation and
demonstration 2

12/ 10
term project presentation and
demonstration3;

term project due friday, 12/20/96. 

 

 workload

there will be 4 homework assignments, 1 mid-term examination, and a
term project.  the requirements in the term project include (1) an
abstract, (2) a mid-project progress report consisting of a short
written report, and a project presentation with working demonstration
of initial results, and (3) a final report.  no extension on
assignments and term project.  ten points will be deducted each day
after the due day.

the assignments will count for 40%, the mid-term exam 20%, and the term project
will make up the remaining 40% of the final grade. 





marina chen


 concepts in programming languages . person
 concepts in programming languages . person
 concepts in programming languages . person
 concepts in programming languages . person
 concepts in programming languages . person
 concepts in programming languages . person
 concepts in programming languages . person
 concepts in programming languages . person
 concepts in programming languages . person
 concepts in programming languages . person