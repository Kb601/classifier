class ray tracer

   ray tracer 
a modular ray tracer





 ray tracer objects 
 

 supporting objects 
 

 test data objects 
 



 from glasner, there are eight stages to creating an image:
    
       generating initial sample points.
       evaluating the data at the sample points.
       combining the samples with any other samples taken.
       testing to determing if sampling is complete.
       generating additional sample points if needed.
       reconstructing the original signal based on the sampled data.
       sampling the reconstruction for the appropriate display.
       displaying the image.
           this project addresses each step above by creating a class of objects,
    and several supporting objects, whose purpose is to complete one of
    the eight steps using the ray-tracing framework.     the modularity of this approach allows a user to easily extend any
    specific function of a ray tracer by subclassing one of the
    existing classes and adding the desired functionality.  in this
    manner a user could easily test a new idea, for example, a new jitter 
    method, without having to write an entire ray tracer to test the
    new functions.    i have created three types of objects.  the first is a set of
    objects required in the ray-tracing paradigm.  the second set is a
    group of objects which support the implementation of this
    framework.  finally, the third set is the objects used in my
    particular test data.    these objects are just for the sampling of the data.  i have
    created an application which produces a ppm file format based on a
    single sample per pixel.

 alphabetic index   hierarchy of classes
source code

isaac a. sheldon
  isheldon@cs.utexas.edu


generated by doc++
 class person person
 class person person
 class person person
 class person person
 class person person
 class person person
 class person person
 class person person
 class person person
 class person person