ariane 5 failure - full report
   



paris, 19 july 1996

ariane 5

flight 501 failure

report by the inquiry board

the chairman of the board :

prof. j. l. lions

foreword

on 4 june 1996, the maiden flight of the ariane 5 launcher ended in
a failure. only about 40 seconds after initiation of the flight sequence,
at an altitude of about 3700 m, the launcher veered off its flight path,
broke up and exploded. engineers from the ariane 5 project teams of cnes
and industry immediately started to investigate the failure. over the following
days, the director general of esa and the chairman of cnes set up an independent
inquiry board and nominated the following members :

- prof. jacques-louis lions (chairman) academie des sciences (france)

- dr. lennart lbeck (vice-chairman) swedish space corporation (sweden)

- mr. jean-luc fauquembergue delegation generale pour l'armement (france)

- mr. gilles kahn institut national de recherche en informatique et en
automatique (inria), (france) 
- prof. dr. ing. wolfgang kubbat technical university of darmstadt (germany)

- dr. ing. stefan levedag daimler benz aerospace (germany) 
- dr. ing. leonardo mazzini alenia spazio (italy) 
- mr. didier merle thomson csf (france) 
- dr. colin o'halloran defence evaluation and research agency (dera), (u.k.)

the terms of reference assigned to the board requested it


- to determine the causes of the launch failure, 
- to investigate whether the qualification tests and acceptance tests were
appropriate in relation to the problem encountered, 
- to recommend corrective action to remove the causes of the anomaly and
other possible weaknesses of the systems found to be at fault.


the board started its work on 13 june 1996. it was assisted by a technical
advisory committee composed of :

- dr mauro balduccini (bpd) 
- mr yvan choquer (matra marconi space) 
- mr remy hergott (cnes) 
- mr bernard humbert (aerospatiale) 
- mr eric lefort (esa)

in accordance with its terms of reference, the board concentrated its
investigations on the causes of the failure, the systems supposed to be
responsible, any failures of similar nature in similar systems, and events
that could be linked to the accident. consequently, the recommendations
made by the board are limited to the areas examined. the report contains
the analysis of the failure, the board's conclusions and its recommendations
for corrective measures, most of which should be undertaken before the
next flight of ariane 5. there is in addition a report for restricted circulation
in which the board's findings are documented in greater technical detail.
although it consulted the telemetry data recorded during the flight, the
board has not undertaken an evaluation of those data. nor has it made a
complete review of the whole launcher and all its systems.

this report is the result of a collective effort by the commission,
assisted by the members of the technical advisory committee.

we have all worked hard to present a very precise explanation of the
reasons for the failure and to make a contribution towards the improvement
of ariane 5 software. this improvement is necessary to ensure the success
of the programme.

the board's findings are based on thorough and open presentations from
the ariane 5 project teams, and on documentation which has demonstrated
the high quality of the ariane 5 programme as regards engineering work
in general and completeness and traceability of documents.

chairman of the board 

1. the failure

1.1 general description

on the basis of the documentation made available and the information
presented to the board, the following has been observed:

the weather at the launch site at kourou on the morning of 4 june 1996
was acceptable for a launch that day, and presented no obstacle to the
transfer of the launcher to the launch pad. in particular, there was no
risk of lightning since the strength of the electric field measured at
the launch site was negligible. the only uncertainty concerned fulfilment
of the visibility criteria.

the countdown, which also comprises the filling of the core stage, went
smoothly until h0-7 minutes when the launch was put on hold since the visibility
criteria were not met at the opening of the launch window (08h35 local
time). visibility conditions improved as forecast and the launch was initiated
at h0 = 09h 33mn 59s local time (=12h 33mn 59s ut). ignition of the vulcain
engine and the two solid boosters was nominal, as was lift-off. the vehicle
performed a nominal flight until approximately h0 + 37 seconds. shortly
after that time, it suddenly veered off its flight path, broke up, and
exploded. a preliminary investigation of flight data showed:


nominal behaviour of the launcher up to h0 + 36 seconds;

failure of the back-up inertial reference system followed immediately
by failure of the active inertial reference system;

swivelling into the extreme position of the nozzles of the two solid
boosters and, slightly later, of the vulcain engine, causing the launcher
to veer abruptly;

self-destruction of the launcher correctly triggered by rupture of
the links between the solid boosters and the core stage.


the origin of the failure was thus rapidly narrowed down to the flight
control system and more particularly to the inertial reference systems,
which obviously ceased to function almost simultaneously at around h0 +
36.7 seconds.

1.2 information available

the information available on the launch includes:


- telemetry data received on the ground until h0 + 42 seconds 
- trajectory data from radar stations 
- optical observations (ir camera, films) - inspection of recovered material.


the whole of the telemetry data received in kourou was transferred to
cnes/toulouse where the data were converted into parameter over time plots.
cnes provided a copy of the data to aerospatiale, which carried out analyses
concentrating mainly on the data concerning the electrical system.

1.3 recovery of material

the self-destruction of the launcher occurred near to the launch pad,
at an altitude of approximately 4000 m. therefore, all the launcher debris
fell back onto the ground, scattered over an area of approximately 12 km2
east of the launch pad. recovery of material proved difficult, however,
since this area is nearly all mangrove swamp or savanna.

nevertheless, it was possible to retrieve from the debris the two inertial
reference systems. of particular interest was the one which had worked
in active mode and stopped functioning last, and for which, therefore,
certain information was not available in the telemetry data (provision
for transmission to ground of this information was confined to whichever
of the two units might fail first). the results of the examination of this
unit were very helpful to the analysis of the failure sequence.

1.4 unrelated anomalies observed

post-flight analysis of telemetry has shown a number of anomalies which
have been reported to the board. they are mostly of minor significance
and such as to be expected on a demonstration flight.

one anomaly which was brought to the particular attention of the board
was the gradual development, starting at ho + 22 seconds, of variations
in the hydraulic pressure of the actuators of the main engine nozzle. these
variations had a frequency of approximately 10 hz.

there are some preliminary explanations as to the cause of these variations,
which are now under investigation.

after consideration, the board has formed the opinion that this anomaly,
while significant, has no bearing on the failure of ariane 501.

2. analysis of the failure

2.1 chain of technical events

in general terms, the flight control system of the ariane 5 is of a
standard design. the attitude of the launcher and its movements in space
are measured by an inertial reference system (sri). it has its own internal
computer, in which angles and velocities are calculated on the basis of
information from a &quot;strap-down&quot; inertial platform, with laser
gyros and accelerometers. the data from the sri are transmitted through
the databus to the on-board computer (obc), which executes the flight program
and controls the nozzles of the solid boosters and the vulcain cryogenic
engine, via servovalves and hydraulic actuators.

in order to improve reliability there is considerable redundancy at
equipment level. there are two sris operating in parallel, with identical
hardware and software. one sri is active and one is in &quot;hot&quot;
stand-by, and if the obc detects that the active sri has failed it immediately
switches to the other one, provided that this unit is functioning properly.
likewise there are two obcs, and a number of other units in the flight
control system are also duplicated.

the design of the ariane 5 sri is practically the same as that of an
sri which is presently used on ariane 4, particularly as regards the software.

based on the extensive documentation and data on the ariane 501 failure
made available to the board, the following chain of events, their inter-relations
and causes have been established, starting with the destruction of the
launcher and tracing back in time towards the primary cause.


the launcher started to disintegrate at about h0 + 39 seconds because
of high aerodynamic loads due to an angle of attack of more than 20 degrees
that led to separation of the boosters from the main stage, in turn triggering
the self-destruct system of the launcher.

this angle of attack was caused by full nozzle deflections of the solid
boosters and the vulcain main engine.

these nozzle deflections were commanded by the on-board computer (obc)
software on the basis of data transmitted by the active inertial reference
system (sri 2). part of these data at that time did not contain proper
flight data, but showed a diagnostic bit pattern of the computer of the
sri 2, which was interpreted as flight data.

the reason why the active sri 2 did not send correct attitude data
was that the unit had declared a failure due to a software exception.

the obc could not switch to the back-up sri 1 because that unit had
already ceased to function during the previous data cycle (72 milliseconds
period) for the same reason as sri 2.

the internal sri software exception was caused during execution of
a data conversion from 64-bit floating point to 16-bit signed integer value.
the floating point number which was converted had a value greater than
what could be represented by a 16-bit signed integer. this resulted in
an operand error. the data conversion instructions (in ada code) were not
protected from causing an operand error, although other conversions of
comparable variables in the same place in the code were protected.

the error occurred in a part of the software that only performs alignment
of the strap-down inertial platform. this software module computes meaningful
results only before lift-off. as soon as the launcher lifts off, this function
serves no purpose.

the alignment function is operative for 50 seconds after starting of
the flight mode of the sris which occurs at h0 - 3 seconds for ariane 5.
consequently, when lift-off occurs, the function continues for approx.
40 seconds of flight. this time sequence is based on a requirement of ariane
4 and is not required for ariane 5.

the operand error occurred due to an unexpected high value of an internal
alignment function result called bh, horizontal bias, related to the horizontal
velocity sensed by the platform. this value is calculated as an indicator
for alignment precision over time.

the value of bh was much higher than expected because the early part
of the trajectory of ariane 5 differs from that of ariane 4 and results
in considerably higher horizontal velocity values.


the sri internal events that led to the failure have been reproduced
by simulation calculations. furthermore, both sris were recovered during
the board's investigation and the failure context was precisely determined
from memory readouts. in addition, the board has examined the software
code which was shown to be consistent with the failure scenario. the results
of these examinations are documented in the technical report.

therefore, it is established beyond reasonable doubt that the chain
of events set out above reflects the technical causes of the failure of
ariane 501.

2.2 comments on the failure scenario

in the failure scenario, the primary technical causes are the operand
error when converting the horizontal bias variable bh, and the lack of
protection of this conversion which caused the sri computer to stop.

it has been stated to the board that not all the conversions were protected
because a maximum workload target of 80% had been set for the sri computer.
to determine the vulnerability of unprotected code, an analysis was performed
on every operation which could give rise to an exception, including an
operand error. in particular, the conversion of floating point values to
integers was analysed and operations involving seven variables were at
risk of leading to an operand error. this led to protection being added
to four of the variables, evidence of which appears in the ada code. however,
three of the variables were left unprotected. no reference to justification
of this decision was found directly in the source code. given the large
amount of documentation associated with any industrial application, the
assumption, although agreed, was essentially obscured, though not deliberately,
from any external review.

the reason for the three remaining variables, including the one denoting
horizontal bias, being unprotected was that further reasoning indicated
that they were either physically limited or that there was a large margin
of safety, a reasoning which in the case of the variable bh turned out
to be faulty. it is important to note that the decision to protect certain
variables but not others was taken jointly by project partners at several
contractual levels.

there is no evidence that any trajectory data were used to analyse the
behaviour of the unprotected variables, and it is even more important to
note that it was jointly agreed not to include the ariane 5 trajectory
data in the sri requirements and specification.

although the source of the operand error has been identified, this in
itself did not cause the mission to fail. the specification of the exception-handling
mechanism also contributed to the failure. in the event of any kind of
exception, the system specification stated that: the failure should be
indicated on the databus, the failure context should be stored in an eeprom
memory (which was recovered and read out for ariane 501), and finally,
the sri processor should be shut down.

it was the decision to cease the processor operation which finally proved
fatal. restart is not feasible since attitude is too difficult to re-calculate
after a processor shutdown; therefore the inertial reference system becomes
useless. the reason behind this drastic action lies in the culture within
the ariane programme of only addressing random hardware failures. from
this point of view exception - or error - handling mechanisms are designed
for a random hardware failure which can quite rationally be handled by
a backup system.

although the failure was due to a systematic software design error,
mechanisms can be introduced to mitigate this type of problem. for example
the computers within the sris could have continued to provide their best
estimates of the required attitude information. there is reason for concern
that a software exception should be allowed, or even required, to cause
a processor to halt while handling mission-critical equipment. indeed,
the loss of a proper software function is hazardous because the same software
runs in both sri units. in the case of ariane 501, this resulted in the
switch-off of two still healthy critical units of equipment.

the original requirement acccounting for the continued operation of
the alignment software after lift-off was brought forward more than 10
years ago for the earlier models of ariane, in order to cope with the rather
unlikely event of a hold in the count-down e.g. between - 9 seconds, when
flight mode starts in the sri of ariane 4, and - 5 seconds when certain
events are initiated in the launcher which take several hours to reset.
the period selected for this continued alignment operation, 50 seconds
after the start of flight mode, was based on the time needed for the ground
equipment to resume full control of the launcher in the event of a hold.

this special feature made it possible with the earlier versions of ariane,
to restart the count- down without waiting for normal alignment, which
takes 45 minutes or more, so that a short launch window could still be
used. in fact, this feature was used once, in 1989 on flight 33.

the same requirement does not apply to ariane 5, which has a different
preparation sequence and it was maintained for commonality reasons, presumably
based on the view that, unless proven necessary, it was not wise to make
changes in software which worked well on ariane 4.

even in those cases where the requirement is found to be still valid,
it is questionable for the alignment function to be operating after the
launcher has lifted off. alignment of mechanical and laser strap-down platforms
involves complex mathematical filter functions to properly align the x-axis
to the gravity axis and to find north direction from earth rotation sensing.
the assumption of preflight alignment is that the launcher is positioned
at a known and fixed position. therefore, the alignment function is totally
disrupted when performed during flight, because the measured movements
of the launcher are interpreted as sensor offsets and other coefficients
characterising sensor behaviour.

returning to the software error, the board wishes to point out that
software is an expression of a highly detailed design and does not fail
in the same sense as a mechanical system. furthermore software is flexible
and expressive and thus encourages highly demanding requirements, which
in turn lead to complex implementations which are difficult to assess.

an underlying theme in the development of ariane 5 is the bias towards
the mitigation of random failure. the supplier of the sri was only following
the specification given to it, which stipulated that in the event of any
detected exception the processor was to be stopped. the exception which
occurred was not due to random failure but a design error. the exception
was detected, but inappropriately handled because the view had been taken
that software should be considered correct until it is shown to be at fault.
the board has reason to believe that this view is also accepted in other
areas of ariane 5 software design. the board is in favour of the opposite
view, that software should be assumed to be faulty until applying the currently
accepted best practice methods can demonstrate that it is correct.

this means that critical software - in the sense that failure of the
software puts the mission at risk - must be identified at a very detailed
level, that exceptional behaviour must be confined, and that a reasonable
back-up policy must take software failures into account.

2.3 the testing and qualification procedures

the flight control system qualification for ariane 5 follows a standard
procedure and is performed at the following levels :


- equipment qualification 
- software qualification (on-board computer software) 
- stage integration 
- system validation tests.


the logic applied is to check at each level what could not be achieved
at the previous level, thus eventually providing complete test coverage
of each sub-system and of the integrated system.

testing at equipment level was in the case of the sri conducted rigorously
with regard to all environmental factors and in fact beyond what was expected
for ariane 5. however, no test was performed to verify that the sri would
behave correctly when being subjected to the count-down and flight time
sequence and the trajectory of ariane 5.

it should be noted that for reasons of physical law, it is not feasible
to test the sri as a &quot;black box&quot; in the flight environment, unless
one makes a completely realistic flight test, but it is possible to do
ground testing by injecting simulated accelerometric signals in accordance
with predicted flight parameters, while also using a turntable to simulate
launcher angular movements. had such a test been performed by the supplier
or as part of the acceptance test, the failure mechanism would have been
exposed.

the main explanation for the absence of this test has already been mentioned
above, i.e. the sri specification (which is supposed to be a requirements
document for the sri) does not contain the ariane 5 trajectory data as
a functional requirement.

the board has also noted that the systems specification of the sri does
not indicate operational restrictions that emerge from the chosen implementation.
such a declaration of limitation, which should be mandatory for every mission-critical
device, would have served to identify any non-compliance with the trajectory
of ariane 5.

the other principal opportunity to detect the failure mechanism beforehand
was during the numerous tests and simulations carried out at the functional
simulation facility isf, which is at the site of the industrial architect.
the scope of the isf testing is to qualify :


- the guidance, navigation and control performance in the whole flight
envelope, 
- the sensors redundancy operation, - the dedicated functions of the stages,

- the flight software (on-board computer) compliance with all equipment
of the flight control electrical system.


a large number of closed-loop simulations of the complete flight simulating
ground segment operation, telemetry flow and launcher dynamics were run
in order to verify :


- the nominal trajectory 
- trajectories degraded with respect to internal launcher parameters
- trajectories degraded with respect to atmospheric parameters 
- equipment failures and the subsequent failure isolation and recovery


in these tests many equipment items were physically present and exercised
but not the two sris, which were simulated by specifically developed software
modules. some open-loop tests, to verify compliance of the on-board computer
and the sri, were performed with the actual sri. it is understood that
these were just electrical integration tests and &quot;low-level &quot;
(bus communication) compliance tests.

it is not mandatory, even if preferable, that all the parts of the subsystem
are present in all the tests at a given level. sometimes this is not physically
possible or it is not possible to exercise them completely or in a representative
way. in these cases it is logical to replace them with simulators but only
after a careful check that the previous test levels have covered the scope
completely.

this procedure is especially important for the final system test before
the system is operationally used (the tests performed on the 501 launcher
itself are not addressed here since they are not specific to the flight
control electrical system qualification).

in order to understand the explanations given for the decision not to
have the sris in the closed-loop simulation, it is necessary to describe
the test configurations that might have been used.

because it is not possible to simulate the large linear accelerations
of the launcher in all three axes on a test bench (as discussed above),
there are two ways to put the sri in the loop:


a) &nbsp;&nbsp;&nbsp;to put it on a three-axis dynamic table (to stimulate
the ring laser gyros) and to substitute the analog output of the accelerometers
(which can not be stimulated mechanically) by simulation via a dedicated
test input connector and an electronic board designed for this purpose.
this is similar to the method mentioned in connection with possible testing
at equipment level.

b) &nbsp;&nbsp;&nbsp;to substitute both, the analog output of the accelerometers
and the ring laser gyros via a dedicated test input connector with signals
produced by simulation.


the first approach is likely to provide an accurate simulation (within
the limits of the three-axis dynamic table bandwidth) and is quite expensive;
the second is cheaper and its performance depends essentially on the accuracy
of the simulation. in both cases a large part of the electronics and the
complete software are tested in the real operating environment.

when the project test philosophy was defined, the importance of having
the sris in the loop was recognized and a decision was taken to select
method b above. at a later stage of the programme (in 1992), this decision
was changed. it was decided not to have the actual sris in the loop for
the following reasons :


the sris should be considered to be fully qualified at equipment level

the precision of the navigation software in the on-board computer depends
critically on the precision of the sri measurements. in the isf, this precision
could not be achieved by the electronics creating the test signals.

the simulation of failure modes is not possible with real equipment,
but only with a model.

the base period of the sri is 1 millisecond whilst that of the simulation
at the isf is 6 milliseconds. this adds to the complexity of the interfacing
electronics and may further reduce the precision of the simulation.


the opinion of the board is that these arguments were technically valid,
but since the purpose of a system simulation test is not only to verify
the interfaces but also to verify the system as a whole for the particular
application, there was a definite risk in assuming that critical equipment
such as the sri had been validated by qualification on its own, or by previous
use on ariane 4.

while high accuracy of a simulation is desirable, in the isf system
tests it is clearly better to compromise on accuracy but achieve all other
objectives, amongst them to prove the proper system integration of equipment
such as the sri. the precision of the guidance system can be effectively
demonstrated by analysis and computer simulation.

under this heading it should be noted finally that the overriding means
of preventing failures are the reviews which are an integral part of the
design and qualification process, and which are carried out at all levels
and involve all major partners in the project (as well as external experts).
in a programme of this size, literally thousands of problems and potential
failures are successfully handled in the review process and it is obviously
not easy to detect software design errors of the type which were the primary
technical cause of the 501 failure. nevertheless, it is evident that the
limitations of the sri software were not fully analysed in the reviews,
and it was not realised that the test coverage was inadequate to expose
such limitations. nor were the possible implications of allowing the alignment
software to operate during flight realised. in these respects, the review
process was a contributory factor in the failure.

2.4 possible other weaknesses of systems involved

in accordance with its termes of reference, the board has examined possible
other weaknesses, primarily in the flight control system. no weaknesses
were found which were related to the failure, but in spite of the short
time available, the board has conducted an extensive review of the flight
control system based on experience gained during the failure analysis.

the review has covered the following areas :


- the design of the electrical system, 
- embedded on-board software in subsystems other than the inertial reference
system, 
- the on-board computer and the flight program software.


in addition, the board has made an analysis of methods applied in the
development programme, in particular as regards software development methodology.

the results of these efforts have been documented in the technical report
and it is the hope of the board that they will contribute to further improvement
of the ariane 5 flight control system and its software.

3. conclusions

3.1 findings

the board reached the following findings:


a) during the launch preparation campaign and the count-down no events
occurred which were related to the failure.

b) the meteorological conditions at the time of the launch were acceptable
and did not play any part in the failure. no other external factors have
been found to be of relevance.

c) engine ignition and lift-off were essentially nominal and the environmental
effects (noise and vibration) on the launcher and the payload were not
found to be relevant to the failure. propulsion performance was within
specification.

d) 22 seconds after h0 (command for main cryogenic engine ignition),
variations of 10 hz frequency started to appear in the hydraulic pressure
of the actuators which control the nozzle of the main engine. this phenomenon
is significant and has not yet been fully explained, but after consideration
it has not been found relevant to the failure.

e) at 36.7 seconds after h0 (approx. 30 seconds after lift-off) the
computer within the back-up inertial reference system, which was working
on stand-by for guidance and attitude control, became inoperative. this
was caused by an internal variable related to the horizontal velocity of
the launcher exceeding a limit which existed in the software of this computer.

f) approx. 0.05 seconds later the active inertial reference system,
identical to the back-up system in hardware and software, failed for the
same reason. since the back-up inertial system was already inoperative,
correct guidance and attitude information could no longer be obtained and
loss of the mission was inevitable.

g) as a result of its failure, the active inertial reference system
transmitted essentially diagnostic information to the launcher's main computer,
where it was interpreted as flight data and used for flight control calculations.

h) on the basis of those calculations the main computer commanded the
booster nozzles, and somewhat later the main engine nozzle also, to make
a large correction for an attitude deviation that had not occurred.

i) a rapid change of attitude occurred which caused the launcher to
disintegrate at 39 seconds after h0 due to aerodynamic forces.

j) destruction was automatically initiated upon disintegration, as designed,
at an altitude of 4 km and a distance of 1 km from the launch pad.

k) the debris was spread over an area of 5 x 2.5 km2. amongst the equipment
recovered were the two inertial reference systems. they have been used
for analysis.

l) the post-flight analysis of telemetry data has listed a number of
additional anomalies which are being investigated but are not considered
significant to the failure.

m) the inertial reference system of ariane 5 is essentially common to
a system which is presently flying on ariane 4. the part of the software
which caused the interruption in the inertial system computers is used
before launch to align the inertial reference system and, in ariane 4,
also to enable a rapid realignment of the system in case of a late hold
in the countdown. this realignment function, which does not serve any purpose
on ariane 5, was nevertheless retained for commonality reasons and allowed,
as in ariane 4, to operate for approx. 40 seconds after lift-off.

n) during design of the software of the inertial reference system used
for ariane 4 and ariane 5, a decision was taken that it was not necessary
to protect the inertial system computer from being made inoperative by
an excessive value of the variable related to the horizontal velocity,
a protection which was provided for several other variables of the alignment
software. when taking this design decision, it was not analysed or fully
understood which values this particular variable might assume when the
alignment software was allowed to operate after lift-off.

o) in ariane 4 flights using the same type of inertial reference system
there has been no such failure because the trajectory during the first
40 seconds of flight is such that the particular variable related to horizontal
velocity cannot reach, with an adequate operational margin, a value beyond
the limit present in the software.

p) ariane 5 has a high initial acceleration and a trajectory which leads
to a build-up of horizontal velocity which is five times more rapid than
for ariane 4. the higher horizontal velocity of ariane 5 generated, within
the 40-second timeframe, the excessive value which caused the inertial
system computers to cease operation.

q) the purpose of the review process, which involves all major partners
in the ariane 5 programme, is to validate design decisions and to obtain
flight qualification. in this process, the limitations of the alignment
software were not fully analysed and the possible implications of allowing
it to continue to function during flight were not realised.

r) the specification of the inertial reference system and the tests
performed at equipment level did not specifically include the ariane 5
trajectory data. consequently the realignment function was not tested under
simulated ariane 5 flight conditions, and the design error was not discovered.

s) it would have been technically feasible to include almost the entire
inertial reference system in the overall system simulations which were
performed. for a number of reasons it was decided to use the simulated
output of the inertial reference system, not the system itself or its detailed
simulation. had the system been included, the failure could have been detected.

t) post-flight simulations have been carried out on a computer with
software of the inertial reference system and with a simulated environment,
including the actual trajectory data from the ariane 501 flight. these
simulations have faithfully reproduced the chain of events leading to the
failure of the inertial reference systems.


3.2 cause of the failure

the failure of the ariane 501 was caused by the complete loss of guidance
and attitude information 37 seconds after start of the main engine ignition
sequence (30 seconds after lift- off). this loss of information was due
to specification and design errors in the software of the inertial reference
system.

the extensive reviews and tests carried out during the ariane 5 development
programme did not include adequate analysis and testing of the inertial
reference system or of the complete flight control system, which could
have detected the potential failure.

4. recommendations

on the basis of its analyses and conclusions, the board makes the following
recommendations.

r1 switch off the alignment function of the inertial reference
system immediately after lift-off. more generally, no software function
should run during flight unless it is needed.

r2 prepare a test facility including as much real equipment as
technically feasible, inject realistic input data, and perform complete,
closed-loop, system testing. complete simulations must take place before
any mission. a high test coverage has to be obtained.

r3 do not allow any sensor, such as the inertial reference system,
to stop sending best effort data.

r4 organize, for each item of equipment incorporating software,
a specific software qualification review. the industrial architect shall
take part in these reviews and report on complete system testing performed
with the equipment. all restrictions on use of the equipment shall be made
explicit for the review board. make all critical software a configuration
controlled item (cci).

r5 review all flight software (including embedded software),
and in particular :


identify all implicit assumptions made by the code and its justification
documents on the values of quantities provided by the equipment. check
these assumptions against the restrictions on use of the equipment.

verify the range of values taken by any internal or communication variables
in the software.

solutions to potential problems in the on-board computer software,
paying particular attention to on-board computer switch over, shall be
proposed by the project team and reviewed by a group of external experts,
who shall report to the on-board computer qualification board.


r6 wherever technically feasible, consider confining exceptions
to tasks and devise backup capabilities.

r7 provide more data to the telemetry upon failure of any component,
so that recovering equipment will be less essential.

r8 reconsider the definition of critical components, taking failures
of software origin into account (particularly single point failures).

r9 include external (to the project) participants when reviewing
specifications, code and justification documents. make sure that these
reviews consider the substance of arguments, rather than check that verifications
have been made.

r10 include trajectory data in specifications and test requirements.

r11 review the test coverage of existing equipment and extend
it where it is deemed necessary.

r12 give the justification documents the same attention as code.
improve the technique for keeping code and its justifications consistent.

r13 set up a team that will prepare the procedure for qualifying
software, propose stringent rules for confirming such qualification, and
ascertain that specification, verification and testing of software are
of a consistently high quality in the ariane 5 programme. including external
rams experts is to be considered.

r14 a more transparent organisation of the cooperation among
the partners in the ariane 5 programme must be considered. close engineering
cooperation, with clear cut authority and responsibility, is needed to
achieve system coherence, with simple and clear interfaces between partners.

- end -




ariane 5 failure - full report
ariane 5 failure - full report
ariane 5 failure - full report
ariane 5 failure - full report
ariane 5 failure - full report
ariane 5 failure - full report
ariane 5 failure - full report
ariane 5 failure - full report
ariane 5 failure - full report
ariane 5 failure - full report