inductive logic programming

inductive logic programming

to view a paper, click on the open book image.  









inductive logic programming for natural language processing
raymond j. mooney

proceedings of the 6th international inductive logic programming workshop, pp. 205-224, stockholm, sweden, august 1996. 


this paper reviews our recent work on applying inductive logic
programming to the construction of natural language processing
systems. we have developed a system, chill, that learns a parser from
a training corpus of parsed sentences by inducing heuristics that
control an initial overly-general shift-reduce parser.  chill learns
syntactic parsers as well as ones that translate english database
queries directly into executable logical form.  the atis corpus of
airline information queries was used to test the acquisition of
syntactic parsers, and chill performed competitively with recent
statistical methods.  english queries to a small database on
u.s. geography were used to test the acquisition of a complete natural
language interface, and the parser that chill acquired was more
accurate than an existing hand-coded system.  the paper also includes
a discussion of several issues this work has raised regarding the
capabilities and testing of ilp systems as well as a summary of our
current research directions.









 integrating explanation-based and inductive learning techniques
to acquire search-control for planning
tara a. estlin

ph.d. proposal, department of computer sciences, university of texas
at austin, 1996. 


planning systems have become an important tool for automating
a wide variety of tasks. control knowledge guides a planner to find
solutions quickly and is crucial for efficient planning in most
domains.  machine learning techniques enable a planning system to 
automatically acquire domain-specific search-control knowledge for
different applications.  past approaches to learning control
information have usually employed explanation-based learning
(ebl) to generate control rules.  unfortunately, ebl alone often
produces overly complex rules that actually decrease rather than
improve overall planning efficiency.  this paper presents a novel
learning approach for control knowledge acquisition that integrates
explanation-based learning with techniques from inductive logic
programming. in our learning system scope, ebl is used to constrain
an inductive search for control heuristics that help a planner choose
between competing plan refinements. scope is one of the few systems
to address learning control information for newer, partial-order
planners.  specifically, this proposal describes how scope learns
domain-specific control rules for the ucpop planning algorithm. the
resulting system is shown to produce significant speedup in two
different planning domains, and to be more effective than a pure ebl
approach.  

future research will be performed in three main areas.
first, scope's learning algorithm will be extended to include
additional techniques such as constructive induction and rule utility
analysis.  second, scope will be more thoroughly tested; several
real-world planning domains have been identified as possible testbeds,
and more in-depth comparisons will be drawn between scope and other
competing approaches.  third, scope will be implemented in a
different planning system in order to test its portability to other
planning algorithms.  this work should demonstrate that
machine-learning techniques can be a powerful tool in the quest for
tractable real-world planning.









 integrating ebl and ilp to acquire control rules for planning
tara a. estlin and raymond j. mooney

proceedings of the third international workshop on
multi-strategy learning, pp. 271-279, harpers ferry, wv, may
1996. (msl-96).


most approaches to learning control information in planning systems
use explanation-based learning to generate control rules.
unfortunately, ebl alone often produces overly complex rules that
actually decrease planning efficiency.  this paper presents a novel
learning approach for control knowledge acquisition that integrates
explanation-based learning with techniques from inductive logic
programming. ebl is used to constrain an inductive search for
selection heuristics that help a planner choose between competing plan
refinements. scope is one of the few systems to address learning
control information in the newer partial-order planners.
specifically, scope learns domain-specific control rules for a version
of the ucpop planning algorithm. the resulting system is shown to
produce significant speedup in two different planning domains.









learning to parse database queries using inductive logic programming
john m. zelle and raymond j. mooney

proceedings of the thirteenth national conference on aritificial intelligence,
pp. 1050-1055, portland, or, august, 1996. (aaai-96)



this paper presents recent work using the chill parser acquisition
system to automate the construction of a natural-language interface
for database queries.  chill treats parser acquisition as the learning
of search-control rules within a logic program representing a
shift-reduce parser and uses techniques from inductive logic
programming to learn relational control knowledge.  starting with a
general framework for constructing a suitable logical form, chill is
able to train on a corpus comprising sentences paired with database
queries and induce parsers that map subsequent sentences directly into
executable queries.  experimental results with a complete
database-query application for u.s. geography show that chill is able
to learn parsers that outperform a pre-existing, hand-crafted
counterpart.  these results demonstrate the ability of a corpus-based
system to produce more than purely syntactic representations.  they
also provide direct evidence of the utility of an empirical approach
at the level of a complete natural language application.









advantages of decision lists and implicit negative in inductive logic
programming
mary elaine califf and raymond j. mooney

technical report, artificial intelligence lab, 
university of texas at austin, 1996. 

 this paper demonstrates the capabilities of foidl, an
inductive logic programming (ilp) system whose distinguishing
characteristics are the ability to produce first-order decision lists,
the use of an output completeness assumption to provide implicit
negative examples, and the use of intensional background knowledge.
the development of foidl was originally motivated by the problem of
learning to generate the past tense of english verbs; however, this
paper demonstrates its superior performance on two different sets of
benchmark ilp problems.  tests on the finite element mesh design
problem show that foidl's decision lists enable it to produce better
results than all other ilp systems whose results on this problem have
been reported.  tests with a selection of list-processing problems
from bratko's introductory prolog text demonstrate that the
combination of implicit negatives and intensionality allow foidl to
learn correct programs from far fewer examples than foil.









comparative results on using inductive logic programming
for corpus-based parser construction
john m. zelle and raymond j. mooney

symbolic, connectionist, and statistical approaches to learning for natural
language processing, s. wermter, e. riloff and g. scheler, eds,
spring verlag, 1995.  


this paper presents results from recent experimenets with chill, a
corpus-based parser acquisition system.  chill treats language
acquisition as the learning of search-control rules within a logic
program.  unlike many current corpus-based approaches that use
statistical learning algorithms, chill uses techniques from inductive
logic programming (ilp) to learn relational representations.  chill is
a very flexible system and has been used to learn parsers that produce
syntactic parse trees, case-role analyses, and executable database
queries.  the reported experiments compare chill's performance to that
of a more naive application of ilp to parser acquisition.  the results
show that ilp techniques, as employed in chill, are a viable
alternative to statistical methods and that the control-rule framework
is fundamental to chill's success.









learning the past tense of english verbs using inductive logic 
programming
raymond j. mooney and mary elaine califf

symbolic, connectionist, and statistical approaches to learning for natural
language processing, s. wermter, e. riloff and g. scheler, eds,
spring verlag, 1995.  

 

this paper presents results on using a new inductive logic programming
method called foidl to learn the past tense of english verbs. the past
tense task has been widely studied in the context of the
symbolic/connectionist debate.  previous papers have presented results
using various neural-network and decision-tree learning methods.  we
have developed a technique for learning a special type of prolog
program called a first-order decision list, defined as an
ordered list of clauses each ending in a cut.  foidl is based on foil
(quinlan, 1990) but employs intensional background knowledge and
avoids the need for explicit negative examples.  it is particularly
useful for problems that involve rules with specific exceptions, such
as the past-tense task.  we present results showing that foidl learns
a more accurate past-tense generator from significantly fewer examples
than all other previous methods.









using inductive logic programming to automate the construction of 
natural language parsers

john m. zelle

ph.d. thesis, department of computer sciences, university of texas at austin, august, 1995.


designing computer systems to understand natural language input is a
difficult task.  in recent years there has been considerable interest
in corpus-based methods for constructing natural language parsers.
these empirical approaches replace hand-crafted grammars with
linguistic models acquired through automated training over language
corpora.  a common thread among such methods to date is the use of
propositional or probablistic representations for the learned
knowledge.  this dissertation presents an alternative approach based
on techniques from a subfield of machine learning known as inductive
logic programming (ilp).  ilp, which investigates the learning of
relational (first-order) rules, provides an empirical method for
acquiring knowledge within traditional, symbolic parsing frameworks.

this dissertation details the architecture, implementation and
evaluation of chill a computer system for acquiring natural
language parsers by training over corpora of parsed text.  chill
treats language acquisition as the learning of search-control rules
within a logic program that implements a shift-reduce parser.  control
rules are induced using a novel ilp algorithm which handles difficult
issues arising in the induction of search-control heuristics.  both
the control-rule framework and the induction algorithm are crucial to
chill's success.

the main advantage of chill over propositional counterparts is
its flexibility in handling varied representations.  chill has
produced parsers for various analyses including case-role mapping,
detailed syntactic parse trees, and a logical form suitable for
expressing first-order database queries.  all of these tasks are
accomplished within the same framework, using a single, general
learning method that can acquire new syntactic and semantic categories
for resolving ambiguities.

experimental evidence from both aritificial and real-world corpora
demonstrate that chill learns parsers as well or better than
previous artificial neural network or probablistic approaches on
comparable tasks.  in the database query domain, which goes beyond the
scope of previous empirical approaches, the learned parser outperforms
an existing hand-crafted system.  these results support the claim that
ilp techniques as implemented in chill represent a viable
alternative with significant potential advantages over neural-network,
propositional, and probablistic approaches to empirical parser
construction.









an inductive logic programming method for corpus-based parser
construction

john m. zelle and raymond j. mooney

submitted to computational linguistics


in recent years there has been considerable research into corpus-based
methods for parser construction.  a common thread in this research has
been the use of propositional representations for learned knowledge.
this paper presents an alternative approach based on techniques from a
subfield of machine learning known as inductive logic programming
(ilp).  ilp, which investigates the learning of relational
(first-order) rules, provides a way of using empricial methods to
acquire knowledge within traditional, symbolic parsing frameworks.  we
describe a novel method for constructing deterministic prolog parsers
from corpora of parsed sentences.  we also discuss several advantages
of this approach compared to propositional alternatives and present
experimental results on learning complete parsers using several
corpora including the atis corpus from the penn treebank.









a comparison of two methods employing inductive logic programming for
corpus-based parser constuction

john m. zelle and raymond j. mooney

working notes of the ijcai-95 workshop on new approaches to
learning for natural language processing, pp.79-86, montreal,
quebec, august, 1995.

 
this paper presents results from recent experiments with chill,
a corpus-based parser acquisition system.  chill treats grammar
acquisition as the learning of search-control rules within a logic
program.  unlike many current corpus-based approaches that use
propositional or probabilistic learning algorithms, chill uses
techniques from inductive logic programming (ilp) to learn relational
representations.  the reported experiments compare chill's
performance to that of a more naive application of ilp to parser
acquisition.  the results show that ilp techniques, as employed in
chill, are a viable alternative to propositional methods and
that the control-rule framework is fundamental to chill's
success.










inducing logic programs without explicit negative examples

john m. zelle, cynthia a. thompson, mary elaine califf, and raymond j. mooney

proceedings of the fifth international workshop on inductive logic
programming, leuven, belguim, sepetember 1995.


 this paper presents a method for learning logic programs
without explicit negative examples by exploiting an assumption of
output completeness. a mode declaration is supplied for the
target predicate and each training input is assumed to be accompanied
by all of its legal outputs.  any other outputs generated by an
incomplete program implicitly represent negative examples; however,
large numbers of ground negative examples never need to be generated.
this method has been incorporated into two ilp systems, chillin and
ifoil, both of which use intensional background knowledge.  tests on
two natural language acquisition tasks, case-role mapping and
past-tense learning, illustrate the advantages of the approach.









induction of first-order decision lists: results on learning the past tense of english verbs

raymond j. mooney and mary elaine califf 

journal of artificial intelligence research, 3 (1995) pp. 1-24.


this paper presents a method for inducing logic programs from examples that
learns a new class of concepts called first-order decision lists, defined
as ordered lists of clauses each ending in a cut.  the method, called foidl, 
is based on foil but employs intensional background knowledge and avoids 
the need for explicit negative examples.  it is particularly useful for 
problems that involve rules with specific exceptions, such as learning the 
past-tense of english verbs, a task widely studied in the context of the 
symbolic/connectionist debate.  foidl is able to learn concise, accurate 
programs for this problem from significantly fewer examples than previous 
methods (both connectionist and symbolic).









  combining top-down and bottom-up techniques in inductive logic programming
 
john m. zelle, raymond j. mooney and joshua b. konvisser 

 proceedings of the eleventh international workshop
on machine learning, pp. 343-351, rutgers, nj, july 1994. (ml-94) 


this paper describes a new method for inducing logic programs from
examples which attempts to integrate the best aspects of existing ilp
methods into a single coherent framework.  in particular, it combines
a bottom-up method similar to golem with a top-down method similar to
foil.  it also includes a method for predicate invention similar to
champ and an elegant solution to the ``noisy oracle'' problem which
allows the system to learn recursive programs without requiring a
complete set of positive examples.  systematic experimental
comparisons to both golem and foil on a range of problems are used to
clearly demonstrate the advantages of the approach.









  inducing deterministic prolog parsers from treebanks:
a machine learning approach    

john m. zelle and raymond j. mooney  
 proceedings of the twelfth national conference on
ai, pp. 748-753, seattle, wa, july 1994. (aaai-94) 
 

this paper presents a method for constructing deterministic, context-sensitive,
prolog parsers from corpora of parsed sentences. our approach uses recent
machine learning methods for inducing prolog rules from examples (inductive
logic programming).  we discuss several advantages of this method compared to
recent statistical methods and present results on learning complete parsers
from portions of the atis corpus.










  integrating ilp and ebl    

raymond j. mooney and john m. zelle  

 sigart bulletin, volume 5, number 1, jan. 1994, pp 12-21. 


this paper presents a review of recent work that integrates methods from
inductive logic programming (ilp) and explanation-based learning (ebl).  ilp
and ebl methods have complementary strengths and weaknesses and a number of
recent projects have effectively combined them into systems with better
performance than either of the individual approaches. in particular, integrated
systems have been developed for guiding induction with prior knowledge
(ml-smart, focl, grendel) refining imperfect domain theories
(forte, audrey, rx), and learning effective search-control
knowledge (axa-ebl, dolphin).










  combining foil and ebg to speed-up logic programs   

john m. zelle and raymond j. mooney  

 proceedings of the thirteenth international joint conference on artificial
intelligence, pp. 1106-1111, chambery, france, 1993. (ijcai-93) 


this paper presents an algorithm that combines traditional ebl
techniques and recent developments in inductive logic programming to
learn effective clause selection rules for prolog programs.  when
these control rules are incorporated into the original program,
significant speed-up may be achieved.  the algorithm is shown to be an
improvement over competing ebl approaches in several domains.
additionally, the algorithm is capable of automatically transforming
some intractable algorithms into ones that run in polynomial time.









  learning semantic grammars with constructive inductive logic programming   

john m. zelle  and raymond j. mooney  

 proceedings of the eleventh national conference of the american
association for artificial intelligence, pp. 817-822,
washington, d.c. july 1993 (aaai-93). 


automating the construction of semantic grammars is a difficult and
interesting problem for machine learning.  this paper shows how the
semantic-grammar acquisition problem can be viewed as the learning of
search-control heuristics in a logic program.  appropriate control
rules are learned using a new first-order induction algorithm that
automatically invents useful syntactic and semantic categories.
empirical results show that the learned parsers generalize well to
novel sentences and out-perform previous approaches based on
connectionist techniques.








 
  speeding-up logic programs by combining ebg and foil   
 
john m. zelle and raymond j. mooney  

 proceedings of the 1992 machine learning workshop on knowledge
compilation and speedup learning, aberdeen scotland, july 1992. 


this paper presents an algorithm that combines traditional ebl
techniques and recent developments in inductive logic programming to
learn effective clause selection rules for prolog programs.  when these
control rules are incorporated into the original program, significant
speed-up may be achieved.  the algorithm produces not only ebl-like
speed up of problem solvers, but is capable of automatically
transforming some intractable algorithms into ones that run in
polynomial time.









  refinement of first-order horn-clause domain theories  

bradley l. richards and raymond j. mooney 

 machine learning 19,2 (1995), pp. 95-131. 

 knowledge acquisition is a difficult and time-consuming
task, and as error-prone as any human activity.  the task of
automatically improving an existing knowledge base using learning
methods is addressed by a new class of systems performing  theory
refinement.  until recently, such systems were limited to
propositional theories.  this paper presents a system, forte
(first-order revision of theories from examples), for refining
first-order horn-clause theories.  moving to a first-order
representation opens many new problem areas, such as logic program
debugging and qualitative modelling, that are beyond the reach of
propositional systems.  forte uses a hill-climbing approach to revise
theories.  it identifies possible errors in the theory and calls on a
library of operators to develop possible revisions.  the best revision
is implemented, and the process repeats until no further revisions are
possible.  operators are drawn from a variety of sources, including
propositional theory refinement, first-order induction, and inverse
resolution.  forte has been tested in several domains including
logic programming and qualitative modelling.  







estlin@cs.utexas.edu

inductive logic programming
inductive logic programming
inductive logic programming
inductive logic programming
inductive logic programming
inductive logic programming
inductive logic programming
inductive logic programming
inductive logic programming
inductive logic programming