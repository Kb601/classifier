the chains programming language  

 the  programming language is a
computer language whose basic data structures and operations are based
on mathematical objects such as vertices, cells,
cell complexes, chains, cochains, and
operators such as boundary and coboundary.  
together these data types provide the ability to represent a geometric
shape or other topological structure with an algebraic formula. once a
topological or geometric structure is expressed algebraically, it
becomes possible to operate on geometry and topology with rigorously
defined algebraic operations, which in turn makes it possible to
systematically compute topological and geometric quantities and
properties.  here  is an example of a
complex, chain and their algebraic and graphical representations.


&lt;about the logo&gt;
&lt;quotation&gt;
&lt; chains theme song (30 second audio)&gt;

 

what's new?

applications of the 
lanugage




  multiple domain physical simulation:
 has been used to create a combined
fluid/elastic solid simulator.  


  an animation of one run of the
combined simulator, showing the coupled nature of the fluid/solid
interactions: how the fluid pressure deflects the elastic solid, which
in turn provides a modified fluid volume.


 finite elements: 
cornell cs tr94-1406 (postscript version) describes the use of
 as a "language for fem."  the
article presents a two page formal specification of an fem formulation
of plane stress, using quadratic shape functions defined over
triangles. this  program
corresponds closely to a textbook derivation, and yet is efficiently
executable.

  communication and standardization


 parallel and distributed computation (see [hs93])  

 scientific computing and visualization.





the  language formalizes the
relationship between geometry (form) and physical behavior (function),
which is fundamental to most engineering activities.   has applications in computer aided
design (cad), scientific computing, and distributed and parallel
computation.

an algebraic-topological programming language  [pal94] [ps93]  is a
computer language that has algebraic-topological objects such as
vertices, simplexes, complexes, and 
chains as it's basic data types.  the power of  lies in the
ability to write an expression that has an evaluable topological (or
geometric) semantics. this provides the ability to ``program'' at a
much higher semantic level.

the relationship between the  language and
algebraic-topology is similar to that between the matlab language and
matrix algebra, or between csg[rv81] and
geometry.

 rick palmer / rick@cs.cornell.edu 



the chains programming language
the chains programming language
the chains programming language
the chains programming language
the chains programming language
the chains programming language
the chains programming language
the chains programming language
the chains programming language
the chains programming language