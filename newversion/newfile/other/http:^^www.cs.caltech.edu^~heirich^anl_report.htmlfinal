diffusion and monte carlo image synthesis

 applications of diffusion to monte carlo image synthesis. 

alan heirich and james arvo

california institute of technology


problem statement.

photorealistic image synthesis requires a detailed simulation of 
photon transport through geometric environments.  
monte carlo methods have been applied to this problem in order
to reduce the amount of computation (1).
the resulting algorithms are concurrent and well suited
to implementation on parallel computers.
an effective implementation requires proper latency hiding and dynamic 
load balancing.


diffusion has been discussed as a metaphor for concurrent computation
since the early 1980's (2).
in recent years numerous diffusion algorithms have been proposed to
solve the problem of dynamic load balancing on parallel computers (3,4).
very recently a diffusion algorithm has been proposed to solve the
closely related mapping problem (5).
this proposal has antecedents in relaxation methods 
applied to problems in circuit layout.


in the current research we have investigated the utility of diffusion 
algorithms to the problems of dynamic load balancing and partitioning in
monte carlo path tracing.
we have implemented a monte carlo algorithm as a message driven
concurrent pipeline, and have employed a diffusion algorithm to perform 
dynamic load balancing.
we have designed a diffusion algorithm to partition complex geometric
models among the processors of a parallel computer and have performed
initial simulations to validate this approach.


research results.

initial results have shown better than 90% scaling efficiencies and we
anticipate that these figures will improve (6).
the implementation has been tested on up to 128 processors, and on 
platforms that include ibm sp1 and sp2 systems, networks of workstations,
and uniprocessors.
we have used the facilities of the argonne hpcrf to measure scalability on
up to 64 processors, and have used other sp installations for larger
benchmarks.
in these benchmarks we have discovered that the implementation does not
require large amounts of network bandwidth, and that it quickly becomes
compute bound for complex models.
for example, the message traffic generated by 64 nodes of the
anl hpcrf was within the bandwidth provided by ethernet.
although an experiment on 128 nodes at the cornell theory center 
became bandwidth limited on ethernet, when higher sampling rates were 
employed this phenomenon subsided.


future plans.

we plan to continue to develop this implementation as well as to
explore complementary rendering techniques (e.g., radiosity,
finite element methods) that are amenable to parallel implementation.
we intend to benchmark the code on a beowulf cluster of 200 mhz pentium pro
computers under construction at the caltech center for advanced computing
research.


funding.

this work has been funded by the cornell program of computer graphics,
the caltech center for advanced computing research, and the nsf center
for research in parallel computation.


references.


(1) kajiya, j.t. the rendering equation.  proc. siggraph (1986).

(2) dijkstra, e.w. & scholten, c.s.  termination detection for diffusing
    computations.  inf. proc. lett. (1980).

(3) cybenko, g. dynamic load balancing for distributed memory 
    multiprocessors. j. par. dist. comp. (1989).

(4) heirich, a. & taylor, s.  a parabolic load balancing method.
    proc. intl. conf. par. proc. (1995).

(5) heirich, a. a scalable diffusion algorithm for dynamic mapping and
    load balancing on networks of arbitrary topology.  intl. j. found.
    comp. sci., to appear (1997).

(6) heirich, a. & arvo, j. scalable photorealistic rendering of complex
    scenes.  proc. 1st eurographics workshop on parallel graphics and
    visualization (1996).


 diffusion and person person image synthesis
 diffusion and person person image synthesis
 diffusion and person person image synthesis
 diffusion and person person image synthesis
 diffusion and person person image synthesis
 diffusion and person person image synthesis
 diffusion and person person image synthesis
 diffusion and person person image synthesis
 diffusion and person person image synthesis
 diffusion and person person image synthesis