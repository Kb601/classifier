cse/ee 461 bboard/mail log




cse/ee 461 computer networks
    bboard/mail log

    spring 1996


this page contains a log of all email sent to the cse/ee 461 class
mailing list cse461@cs.  
we will use this list for
announcements of general interest to the class.  students should
also feel free to use it to ask questions, post information, or
initiate discussions  of general interest to the class.  of course,
questions or comments that don't seem of general interest can be
directed to the ta 
(wchan@cs) or instructor
(ladner@cs), instead.  
 
following usual internet conventions, administrative requests
concerning the mailing list itself, such as add/delete/address
change requests, should be addressed to 
cse461-request@cs.

index of messages
(latest message friday, 07-jun-96 12:11:06 pdt.)


27 mar 96 wchan@lupine __ cse/ee 461
28 mar 96 ladner@cs _____ problem 1 part (b), homework 1.
28 mar 96 ladner@cs _____ text books
 1 apr 96 wchan@lupine __ 461 ta office hours
 3 apr 96 ladner@cs _____ keys and accounts
 3 apr 96 ladner@cs _____ text book
 5 apr 96 ladner@cs _____ internet phone
 7 apr 96 ladner@cs _____ what to read in chapter 2
 9 apr 96 ladner@cs _____ homework 3
 9 apr 96 ladner@cs _____ homework 3.
16 apr 96 wchan@lupine __ if you're uncomfortable with c
17 apr 96 ladner@cs _____ lecture clarification
19 apr 96 wchan@lupine __ project 1
22 apr 96 ladner@cs _____ midterm exam
22 apr 96 ladner@cs _____ question and answer on wednesday
22 apr 96 ladner@cs _____ question and answer session
23 apr 96 wchan@cs ______ re:  project question
24 apr 96 ladner@cs _____ last years midterm
 1 may 96 ladner@cs _____ midterm
 3 may 96 ladner@cs _____ warning
 3 may 96 ladner@cs _____ bad calculation
 5 may 96 wchan@calvin __ project stuff
 7 may 96 barak@cs ______ sim and linux
 7 may 96 ladner@cs _____ what to read in chapters 4 and 5
 9 may 96 wchan@calvin __ part 1 solution
 9 may 96 wchan@cs ______ ack timer in protocol 8
13 may 96 ladner@cs _____ queuing theory
13 may 96 wchan@lupine __ project 1
16 may 96 wchan@lupine __ project 3 ready
16 may 96 wchan@cs ______ irc
20 may 96 ladner@cs _____ may
22 may 96 dgodon@u ______ reading
27 may 96 wchan@cs ______ project 2 graded
29 may 96 ladner@cs _____ office hours
29 may 96 ladner@cs _____ what to read for the final
31 may 96 ladner@cs _____ final exam
 2 jun 96 wchan@calvin __ 461







messages

date: wed, 27 mar 1996 11:38:52 -0800
from: wchan@lupine
to: cse461@cs
subject: cse/ee 461


this is a test for the cse/ee 461 mailing list.
let me know if you're not taking the class.

the web page has been set up. the url is:
	http://www.cs.washington.edu/education/courses/461/
homework 1 is there if you didn't get a copy this morning.

-- william
to: cse461@cs
subject: problem 1 part (b), homework 1.
date: thu, 28 mar 1996 17:02:54 pst
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



for part (b) you can assume that a 747 is takes off
every 12 hours delivering tapes.   i sort of made
that assumption but was not explicit enough.

richard
to: cse461@cs
subject: text books
date: thu, 28 mar 1996 17:07:10 pst
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



i have heard that the bookstore is out of books.  i
have been told that new books will arrive early next
week.  

i ordered enough for those actually registered for
the class.  clearly, some books were bought by folks
not in the class.

i don't have any extra copies, so for the time being
i hope that some of you will be willing to share with
your fellow students.

richard ladner
date: mon, 1 apr 1996 10:35:20 -0800
from: wchan@lupine
to: cse461@cs
subject: 461 ta office hours


i'll have an office hour every tuesday (starting tomorrow)
11:30 to 12:20 in sieg 225. and i'll make my thursday office
hour (2:30 - 3:20, sieg 326) permanent.

-- william
to: cse461@cs
subject: keys and accounts
date: wed, 03 apr 1996 09:51:03 pst
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



to pick up your key and account go to the main cse
office in sieg 114 and state your request.  be sure
to mention you are in my class.

to: cse461@cs
subject: text book
date: wed, 03 apr 1996 11:25:01 pst
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



i have been informed that the book has arrived
at the bookstore.

richard
to: cse461@cs
subject: internet phone
date: fri, 05 apr 1996 08:16:40 pst
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



student sean vaughan has discovered that a particular
flavor of the internet phone uses both tcp and udp.

please read below.

richard  

-------------------------------

from sean vaughan:

in some of the the documentation that i was reading through on the
&quot;internet phone&quot; (http://www.vocaltec.com) i found the following: 

... the two channels it works with: 

1. tcp port 6667 (decimal) to remote system: the port used to connect to
irc (note that some irc servers use different port assignments, such as
6665 or 6666, but none of them appear on the default list of irc servers
in the internet phone. you need to open these ports only if you are
actually using servers on them). 

2. udp port 22555 (decimal). all audio is passed through this port on both
local and remote machine. 

eom

basically tcp port 6667 is used for setting up the call while udp port 
22555 is used for the audio transmission.



to: cse461@cs
subject: what to read in chapter 2
date: sun, 07 apr 1996 14:52:19 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



i certainly recommend that you read the entire chapter, but
be sure to read.

2.1.3
2.3.1
2.4.4
2.4.5
2.6.1
2.8.3
2.9
to: cse461@cs
subject: homework 3
date: tue, 09 apr 1996 10:56:19 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



in problem 2 the transmission bandwidth in part
b should be .5 gbps not ghz.

in problem 3, explain what the computer must do
to avoid transmitting to quickly to the network.

to: cse461@cs
subject: homework 3.
date: tue, 09 apr 1996 11:08:47 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



in problem 1 change 4 db to 40 db.  my error.

richard
date: tue, 16 apr 1996 00:51:27 -0700
from: wchan@lupine
to: cse461@cs
subject: if you're uncomfortable with c


we are going to hand out the first project on wednesday.  you'll be
asked to modify some of the data link protocols in the book.  if you
feel uncomfortable with c, you can come to my office hour today
(11:30am sieg 225) and we can go through the protocols in the book.

-- william
to: cse461@cs
subject: lecture clarification
date: wed, 17 apr 1996 09:35:37 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



for all the sliding window policies the receiver
must send a request with sequence no i whenever it
receives a frame and i the number of the first
empty slot in its window after the frame arrives.

in this way the sender will eventually be notified
to send this frame again.

thus line on transparency 9 is really correct
except it should read

 -if window is at i and a frame j arrives
with j different from i then ignor the frame, but
send ack (request) with seq_no i.

my apologies for the confusion in class. 

richard

date: fri, 19 apr 1996 14:39:16 -0700
from: wchan@lupine
to: cse461@cs
subject: project 1


1  there are two fields for sequence numbers in the frame struct,
   namely seq and ack. seq is for the sequence number of the data,
   while ack is for the sequence number of the ack. the receiver
   should not put sequence number in the seq field; it would be
   wiped out by the simulator. use the ack field instead.

2  if you use printf() to print debug information in sender() or
   receiver(), the output might be mixed up and hard to read.
   to partially fix this, copy the new protocol.h to your directory,
   and instead of printf(&quot;mumble&quot;), use fprintf(tty[id],&quot;mumble&quot;).

3  because of the size of the class, i won't have time to read your
   code in any detail. so i'll mostly grade your code based on 
   correctness.  if your program doesn't work, make sure you explain
   what the problem is, and what you think might cause the problem, etc,
   so that i can give you partial credit.

-- william
to: cse461@cs
subject: midterm exam
date: mon, 22 apr 1996 09:54:09 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



the midterm is friday, april 26.

bring one 8 1/2 x 11 inch blue book.

you may use the first four pages for your personal
handwritten notes.  use the notes to help you
organize the material.  the exam will not be a test
of memory, but a test of your thinking ability and
your ability to solve problems.

what you should read and understand.

chapter 1
sections
1.1
1.2
1.3
1.4

chapter 2
sections
2.1.3
2.3.1
2.4.4
2.4.5
2.6.1
2.8.3
2.9

chapter 3
sections
3.1
3.2
3.3
3.4
3.5.1
3.6
to: cse461@cs
subject: question and answer on wednesday
date: mon, 22 apr 1996 10:08:30 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



after finishing chapter 3 in the lecture wednesday,
there will be a question and answer session.

please be prepared with your questions and i can
hopefully help with answers.

as encouragement for you to ask questions, it is
often the case that students think their questions
are too simple or stupid.  this is almost never the
case.  if you don't understand something, even
something very basic, you can bet other students
don't either.  your questions are most often
appreciated by other students.

please come in with your questions on wednesday.

richard
to: cse461@cs
subject: question and answer session
date: mon, 22 apr 1996 16:59:39 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



several students have e-mailed me questions for
wednesday's session.  this is wonderful.  it gives
me a chance to think about the questions so i can
make thoughtful answers.

if you have any questions you can tell me ahead of
time just e-mail and i can hopefully answer on
wednesday.

here are the questions so far:

1. what, exactly, *is* bandwidth?
i thought bandwidth was the range of frequencies (in hz) that a given 
filter would pass.  in this case, a communication channel wire, or 
fiber, or radio, etc.

however, in the homeowrks, bandwidth is used to refer to data rate, and 
is given in bps.

i've seen this problem from outside sources before, as well, so is 
&quot;bandwidth&quot; just a well-defined, but sometimes sloppily applied term?

2. i have some doubts, reg par and abp.
you said we can fix par by putting seq_no into
acks, isn't that what the abp does, or is there
any other difference ?

3.  what is the difference between abp and
protocol no. 4?

all good questions, let's have more.

richard

date: tue, 23 apr 1996 17:13:40 -0700
from: wchan (william chan)
to: cse461@cs
subject: re:  project question


&gt;on problem 4 you ask what could go wrong if (1) the data frames do not carry
&gt;sequence numbers and (2) if the request frames do not carry sequence numbers.
&gt;are you asking what would happen if the data frames do not carry sequence 
&gt;numbers and the request frames do carry sequence numbers?  and then separately
&gt;if the request frames do not carry sequence numbers and the data frames do? 

yes.

-- william
to: cse461@cs
subject: last years midterm
date: wed, 24 apr 1996 09:37:10 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



i put extra copies of the midterm in the bottom slot
of my hanger outside my door, 311 sieg.

i don't have a solution set for the midterm but i
would be happy to explain any solutions during
my office hour today or tomorrow from 11-12.

richard
to: cse461@cs
subject: midterm
date: wed, 01 may 1996 11:07:04 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



as i mentioned in class today on the solution to 
problem 2a on the midterm i transposed selective
repeat and go-back-n.  

also, the mean on the midterm was 64 with a high
of 90 and a low near 30.

as you can see from the midterm, i am emphasizing
problem solving over memory work.  in preparation for
the final i will pass out my old final so that you
can prepare by solving those old problems.
to study for the final you will want to practice the
kind of work that will be expected on it.

richard
to: cse461@cs
cc: lazowska@cs, borning@cs
subject: warning
date: fri, 03 may 1996 09:41:52 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



there were quite a few students not in class today. 
i just want to warn those of you that did not come
to class today that i covered the binary tree
protocols in depth.  this topic is not covered
deeply in the book.

there will be an assignment on this topic next week
and the topic has appeared on some of my final exams
in the past.

i know that attendence is not manditory, but i am
concerned that those of you missing class
regularly are not receiving the quality education 
that you are paying for.

to: cse461@cs
subject: bad calculation
date: fri, 03 may 1996 11:37:29 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



the calculation i did in class calculating the number
of bits on a 1km wire running at 10 mbps was wrong.

what i wrote was
5 x 10^-6 sec x 10^7 b/sec = 500.

the correct calculation is 
5 x 10^-6 sec x 10^7 b/sec = 5 x 10^1 = 50.

thus, two frames cannot &quot;pass in the night&quot;.  needless
to say jamming is done probably because it is safer
and scales up to longer wires and higher bandwidths.

that'll teach me to try doing a calculation in real
time.  

please, please stop me during class
when you see me make such errors.  

richard
date: sun, 5 may 1996 15:30:49 -0700
from: wchan@calvin (william chan)
to: cse461@cs
subject: project stuff


except for protocol 6, when there is a timeout, the simulator 
always says the timeout was for frame 0. i've changed worker.c
so that it tells which sequence number it timed out on. you
can get the new worker.c from the simulator directory. let me
know if you find other bugs.

also, if you haven't noticed, i've put a solution to project 1
in /cse/courses/cse461/simulator/solution1.

i don't think i'll be able to finish grading project 1 by
wednesday. but if you're a c novice and want me to give you
some feedback before you hand in part 1 of project 2, let me know.

-- william
date: tue, 7 may 1996 08:24:26 -0700 (pdt)
from: barak water &lt;barak@grizzly.cs.washington.edu&gt;
to: cse461@grizzly.cs.washington.edu
subject: sim and linux


for what it's worth, in case anyone is interested or even mildly curious, 
in a moment of frustration with grizzly being really *s l o w* i ftp'ed 
the simulator to my linux box, compiled it, and discovered to my pleasure 
that it not only compiles but behaves the same as on grizzly.
this may be old news to some; but it seemed worth mentioning...

take care all,

barak water

to: cse461@cs
subject: what to read in chapters 4 and 5
date: tue, 07 may 1996 16:14:45 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



you will definitely need to read the following
sections in chapters 4 and 5.

4.1
4.2.1
4.2.2
4.2.3
4.3.1
4.3.2
4.3.3
4.3.4
4.5.1
4.5.2

5.1
5.2.1
5.2.2
5.2.3
5.2.5
5.2.6
5.2.7
5.3.1
5.3.2
5.3.3
5.4 intro

more reading from chapter 5 will be given later.
date: thu, 9 may 1996 01:28:09 -0700
from: wchan@calvin (william chan)
to: cse461@cs
subject: part 1 solution


i've put a solution to part 1 of project 2 in the simulator
directory in the file p7.c. good luck on part 2!

-- william
date: thu, 9 may 1996 16:57:25 -0700
from: wchan (william chan)
to: cse461@cs
subject: ack timer in protocol 8


in p8.c, i had:

typedef enum {frame_arrival, cksum_err, timeout, network_layer_ready} event_type;

but in order to use the ack timer, it should be changed to:

typedef enum {frame_arrival, cksum_err, timeout, network_layer_ready, ack_timeout} event_type;

i've just fixed this in p8.c in the simulator directory.

you can start the ack timer by calling start_ack_timer() and 
stop it by calling stop_ack_timer(). when the ack timer goes off,
an event ack_timeout occurs.

-- william
to: cse461@cs
subject: queuing theory
date: mon, 13 may 1996 09:51:34 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



i probably didn't explain myself very well.  let me 
give an example.

we have two incoming lines and one outgoing line to
a switch each with the same bandwidth b.
               _____
              |     |
     a -------|     |
              |     |-------- c
     b -------|     |
              |     |
               -----

we know that cell arrivals on a are at a statistical
rate of b/2 and similarly for b.  thus, the overall
arrival rate at the switch is b.  this will
cause the average queue length at the switch to be
infinity.  if the arrivals are poisson, which
basically means that the arrivals are completely
independent, then it can be proven that this is true.

it appears on the surface that the switch can handle
the arrival rate of b.  indeed it can, assuming it
has unbounded storage space.  if storage space is
bounded, then it will eventually overflow.

richard 
date: mon, 13 may 1996 15:03:39 -0700
from: wchan@lupine
to: cse461@cs
subject: project 1


sorry about the delay. project 1 has been graded, and you should 
have received your score. if you haven't, but you did turn in the 
project, let me know.

-- william
date: thu, 16 may 1996 00:29:05 -0700
from: wchan@lupine
to: cse461@cs
subject: project 3 ready


i've put project 3 on the web and put xerox copies outside the
professor's office. if you want a hardcopy before friday, go
to the professor's office at sieg 311 and pick up a copy. otherwise,
we will distribute them on friday in class.

the handout is lengthy, because there is quite a bit of background
information. but in terms of the code you need to write, it's not too
long. this is the first time we gave an assignment involving &quot;real&quot;
network programming. if you think it's too hard or too easy, let us
know. again, for those of you who are less familiar with c, don't
hesitate to ask me c questions. i hope you'll have some fun doing this
assignment. ;-)

-- william
date: thu, 16 may 1996 14:29:47 -0700
from: wchan (william chan)
to: cse461@cs
subject: irc


one of you asked about project 3:

&gt; &lt;in this assignment, we will focus on udp, on which we will
&gt; &lt;build a simple chat application allowing multiple users to talk with one 
&gt; &lt;another on the internet
&gt; &lt;(similar to irc). 
&gt; 
&gt;   what is irc ?

irc stands for internet relay chat. glad that you didn't know it.
it's a super time sink...  you can take a look at the faq at:
	ftp://cs-ftp.bu.edu/irc/support/alt-irc-faq

-- william
to: cse461@cs
subject: question on assignment 8.
date: mon, 20 may 1996 15:15:17 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



question:

regarding assignment #8, we were wondering how the switch works.  is 
there one queue for all incoming traffic or are there separate queues for 
each sender/receiver?  are these channels independent of each other?

answer:

the important thing is that there is a single buffer
pool for all arrivals.  when a packet arrives and
there is a buffer free it gets the packet.  the
full buffer is then put on the outgoing queue.
once the packet is sent the buffer becomes free
again.  

date: wed, 22 may 1996 20:20:35 -0700
from: demian godon &lt;dgodon@u.washington.edu&gt;
organization: university of washington
to: cse461@cs.washington.edu
subject: reading
x-url: http://www.cs.washington.edu/education/courses/461/cse461-bboard.shtml#831510895001


what sections beyond 5.4intro would you recommend reading?  that is, are there any 
in particular?
date: mon, 27 may 1996 16:47:53 -0700
from: wchan (william chan)
to: cse461@cs
subject: project 2 graded


if you have turned in project 2, you should have received 
your grade. if not, let me know.

(i sent the grade to your cse account, not your ee or .u account.)

-- william
to: cse461@cs
subject: office hours
date: wed, 29 may 1996 08:00:04 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



i cannot make my office hour today at 11 am.

because the exam is on tuesday, i will have special
office hours on friday and monday.

office hours until the exam.

thursday:  11 - 12  (regular office hour)
friday: 11 - 12
monday:  11 - 12

you are welcome to make an appointment for another time
if you cannot make these times.

richard
to: cse461@cs
subject: what to read for the final
date: wed, 29 may 1996 17:26:57 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



chapter 1
sections
1.1
1.2
1.3
1.4

chapter 2
sections
2.1.3
2.3.1
2.4.4
2.4.5
2.6.1
2.8.3
2.9

chapter 3
sections
3.1
3.2
3.3
3.4
3.5 intro
3.5.1
3.6

chapter 4
sections
4.1
4.2 intro
4.2.1
4.2.2
4.2.3
4.3 intro
4.3.1
4.3.2
4.3.3
4.3.4
4.5 intro
4.5.1
4.5.2

chapter 5
sections
5.1
5.2 intro
5.2.1
5.2.2
5.2.3
5.2.5
5.2.6
5.2.7
5.3 intro
5.3.1
5.3.2
5.3.3
5.4 intro
5.4.1
5.4.2
5.4.3
5.4.4
5.4.5
5.4.6
5.4.7
5.5 intro
5.5.1
5.5.2
5.5.4
5.5.10

chapter 6
sections
6.1 intro
6.1.1
6.1.2
6.1.3
6.2 intro
6.2.1
6.2.2
6.2.3
6.2.3
6.2.4
6.4.3
6.4.7

chapter 7
sections
7.1 intro
7.1.1
7.1.2
7.1.3
7.1.4
7.1.6
7.7.3

to: cse461@cs
subject: final exam
date: fri, 31 may 1996 09:39:35 pdt
from: richard ladner &lt;ladner@whalespout.cs.washington.edu&gt;



this is a reminder to bring an 8 1/2 x 11 inch blue book
to the final exam.  you may use as many pages as you like
for your handwritten notes.  be sure and leave some pages
for the final itself.

the final is 8:30 - 10:20 on tuesday, june 4th.

i have special office hours today and monday from 11 to
12.  if you need to make an appointment because you
cannot make those time, please send me e-mail.

i'm rooting for all of you to do well on the final.

good luck,

richard
date: sun, 2 jun 1996 04:38:17 -0700
from: wchan@calvin (william chan)
to: cse461@cs
subject: 461


i just sent out two messages to each of you:

1  your project 3 grade and comments (sent to your cse account)
2  all your homework, project and midterm grades (sent to your 
   email address in the class mailing list). please verify that
   the grades are correct.

let me know if you didn't receive either message.

good luck on the exam!
-- william





ladner@cs.washington.edu

wchan@cs.washington.edu

(last update: 
   
  03/27/96)




cse/ee 461 bboard/mail log

cse/ee 461 bboard/mail log

cse/ee 461 bboard/mail log

cse/ee 461 bboard/mail log

cse/ee 461 bboard/mail log

cse/ee 461 bboard/mail log

cse/ee 461 bboard/mail log

cse/ee 461 bboard/mail log

cse/ee 461 bboard/mail log

cse/ee 461 bboard/mail log