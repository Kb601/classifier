brute

brute



principal investigators: 
 richard segal  and
 oren etzioni .




overview

brute is an inductive system for performing both data mining and
classification tasks.  at the core of brute, is an algorithm for
efficiently searching the space of conjunctive rules up to a user specified
depth.  when used for data mining, this core search can identify rules that
meet a specific search criteria.  when used for classification, the rules
found by brute's core search must be combined to form a classifier.  brute
supports several mechanisms for building a classifier.

brute differs from existing data mining and classification algorithms in
that it uses massive search rather than greedy search.  massive search can
avoid many of the pitfalls of greedy search, albeit at additional cost.   empirical analysis shows that brute
performs much better than greedy algorithms for data mining and has similar
performance when used for classification.  surprisingly, brute's  running time is often quite reasonable.

efficiency

brute's efficiency is important because of its reliance on massive search.
brute was implemented in c to achieve maximum search speed.  brute can
process 100,000 rules per second on a 500 item database when run a sparc-10
processor.  brute's running time grows linearly with the number of training examples. 

brute uses several pruning axioms to reduce the size of the space it must
search.  these axioms are sound in that they only remove portions of the
search space guaranteed not to contain useful rules.  brute can commonly
reduce the search space by a factor of a 1,000 or more.

flexibility

brute is a highly parameterized algorithm that allows the exploration of
several different learning algorithms.  brute's  options allow it to simulate algorithms such
as brutedl, greedy3, kdl, 1r, and many variations.  this flexibility makes
brute a valuable tool for learning research.

brute supports a wide variety of data formats.  brute can be used with
minimal effort on databases from the uci
repository, c4.5 databases, and ind databases.  a program is provided
for automatically creating attribute description files that makes it easy
to use brute on new data sets.

availability

brute is available for both research and commercial uses.  please contact
oren etzioni (etzioni@cs.washington.edu) for licensing details.  

references

p. riddle, o. etzioni, c. pearson, and r. segal.  
process improvement through automated feedback (preliminary report). in
 proceedings of the machine learning workshop on integrated learning in
real-world domains, july 1992.

p. riddle, r. segal, and o. etzioni.  
representation design and brute-force induction in a boeing manufacturing
domain.  applied artificial intelligence, 8:125-147, 1994.

r. segal and o. etzioni.   learning 
decision lists using homogeneous rules. in  proceedings of the
twelfth national conference on artificial intelligence, july, 1994.


segal@cs.washington.edu

 brute
 brute
 brute
 brute
 brute
 brute
 brute
 brute
 brute
 brute