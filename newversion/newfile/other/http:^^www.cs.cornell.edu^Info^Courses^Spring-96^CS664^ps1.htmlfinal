cs 664:  problem set 1


 cs 664:  problem set 1 : stochastic stereo vision 

a postscript copy of the assignment.  

important: for problem 6, you should look at the postscript of the
handout, and not the photocopied handouts in class, since the images
were blackened out by the photocopying process.

 
test images. you should make your own test images, in addition to the ones here.  the problem set is finalized, you need only submit the results for these two images below.    
 


left and right random dot stereogram, as seen in fig.1
of assignment.

left and right images from a stereo camera.  you
should submit the results starting from a zeroed disparity map and
using this starting map(if you are using a
linux or nt on an ibm, you should use this big-endian short image).  (the map
was generated using a simple windowing sum of squared differences
method).  be sure to use a value of delta = 10 , otherwise this
disparity map will have the wrong size.


using the adt image libraries
  the following versions of the library are available

 sunos
 
available on the cs dept machines as ~robotlab/new/lib/libadt.a, with the appropriate header files in ~robotlab/new/include/adt/ .  do not use -dsvr4 on your command line.
sunlab: located in ~jmiller/664/libadt.a, with header files in ~jmiller/664/include.  
other locations: library and header files.

 solaris


available on the cs dept machines as
~robotlab/new/lib/libadt-svr4.a, with the appropriate header files in
~robotlab/new/include/adt/ , be sure to include -dsvr4 on your command
line.

sunlab: you won't need the solaris version.

other locations: library and header files.



linux: here is the (elf) library
and a tarfile containing the header files.

 aix 3.2.5 (thanks to christoper kline), here is a copy of the email he sent me.

windows nt: i've changed my mind, the chances of easily getting
visual c++ code to compile with another compiler is minimal.  if you
want to use gcc then maybe we can talk, debates to
jmiller@cs.cornell.edu.




problem set 1: mini-faq



  if the maximum absolute value of disparity is 8, then the
disparity image should lose only 4 pixels on each side (because of the
cyclopean model), not 8 as mentioned in the hw assignment.  this would
yield a disparity image that is 632x480. 

 yes, i mixed this one up.  it should only be 4 pixels on each side,
when using the cyclopean model.  if you correct the mistake, be sure
to double the delta constant to 20 when using the tree images, so that
the disparity map i gave you will be the right size.

 what is the termination condition?

when the average of the demon energy is near zero.  the demon
energy can temporarily be zero, but the average will not be zero
unless the system is near equilibrium.  since the average is near
zero, the standard deviation has to be near zero and therefore the
ration of the two is nearly 1 (see equation 10 in barnard paper).

the termination condition is not zero energy for the system, any
interesting answer should have non-zero energy.


 how can i make my own test images?  

answer 1: write a program to generate the images.  answer 2:
generate them in matlab, there are a set of matlab .m files in
~jmiller/prog/matlab/robotlab, read the documentation.  a simple image is:


a = rand([40 40]);                         %background
b = rand([20 20]);                         %moving object
c = a; d = a;                              %copy background
c(11:30,11:30) = b;                        %copy forground
d(13:32,11:30) = b;                        %copy forground shift by 2
imsavef('image_gray',c*255,'left.pgm');    %save images, note we multiply
imsavef('image_gray',d*255,'right.pgm');   % by 255 since gray images have
                                           % values 0..255 and rand generates
                                           % values in 0..1 range




 what does ergodic mean?  

a good answer to this was recently posted to sci.image.processing.  

  what are areas have optimization techniques been applied to? 

image restoration and reconstruction [grimson 1981; terzopoulos 1983a;
geman and geman 1984; leclerc 1989; hung et al. 1991]

shape from shading [ikeuchi and horn 1981]

stereo, motion and optical flow [ullman 1979a; horn and schunck 1981'
hildreth 1984; murray and buxton 1987; barnard jain 1987]

texture [hassner and slansky 1980; kashyap et al. 1982; cross and kain
1983]

edge detection [torre and poggio 1986; tan et al. 1992],

image segmentation [silverman and cooper 1988; li 1990a],

perceptual grouping [lowe 1985; mohan and nevatia 1989;
herault and horaud 1993], 

interpretation of line drawings [leclerc and
fischler 1992], 

object matching and recognition [fischler and elschlager 1973; davis
1979; shapiro and haralick 1981; bhanu and faugeras 1984 ; ben-arie
and meiri 1987 ; modestino and zhang 1989 ; nasrabadi et al. 1990 ;
wells iii 1991 ; friedland and rosenfeld 1992 ; li 1992a ; li 1994a]

pose estimation [haralick et al. 1989]



 cs 664 : person person 1
 cs 664 : person person 1
 cs 664 : person person 1
 cs 664 : person person 1
 cs 664 : person person 1
 cs 664 : person person 1
 cs 664 : person person 1
 cs 664 : person person 1
 cs 664 : person person 1
 cs 664 : person person 1