"simultaneous multithreading: maximizing on-chip parallelism"




simultaneous multithreading: maximizing on-chip parallelism



dean m. tullsen,
susan j. eggers, and
henry m. levy,



the increase in component density on modern microprocessors has
led to a substantial increase in on-chip parallelism.  in particular, 
modern superscalar riscs can issue 
several instructions to independent functional units 
each cycle.  however, the benefit of such superscalar architectures is 
ultimately limited by the parallelism available in a single thread.  

this paper examines simultaneous multithreading, a technique
permitting several independent threads to issue instructions to 
a superscalar's multiple
functional units in a single cycle.  in the most general case, the 
binding between thread and functional unit is completely dynamic.
we present several
models of simultaneous multithreading and compare them with wide superscalar,
fine-grain multithreaded, and single-chip, multiple-issue multiprocessing architectures.  
to perform 
these evaluations, we simulate a simultaneous multithreaded
architecture based on the dec alpha 21164 design, and execute code
generated by the multiflow trace scheduling compiler.  our results show that:
(1) no single latency-hiding technique is likely 
to produce acceptable utilization of wide 
superscalar processors.  increasing processor
utilization will therefore require a new approach,
one that attacks multiple causes of processor idle
cycles.
(2) simultaneous multithreading is such a technique.
with our machine model, an 8-thread, 8-issue
simultaneous multithreaded processor
sustains over 5 
instructions per cycle, while
a single-threaded processor
can sustain fewer than 1.5 instructions per cycle with similar resources and issue
bandwidth.
(3) multithreaded workloads degrade cache performance relative to
single-thread performance, as previous studies have shown.  we evaluate
several cache configurations and demonstrate that private instruction
and shared data caches provide excellent performance regardless of the
number of threads.
(4) simultaneous multithreading is an attractive alternative to
single-chip multiprocessors.  we show that simultaneous multithreaded
processors with a variety of organizations are all superior to conventional 
multiprocessors with similar resources.

while simultaneous multithreading has excellent potential to increase
processor utilization, it can add substantial complexity to the design.
we examine many of these complexities and evaluate alternative
organizations in the design space.


proceedings of the 22rd annual international symposium on computer architecture, santa margherita ligure, italy, june 1995.

to get the postscript file, click
here.



jlo@cs.washington.edu  




"simultaneous multithreading: maximizing on-chip parallelism"

"simultaneous multithreading: maximizing on-chip parallelism"

"simultaneous multithreading: maximizing on-chip parallelism"

"simultaneous multithreading: maximizing on-chip parallelism"

"simultaneous multithreading: maximizing on-chip parallelism"

"simultaneous multithreading: maximizing on-chip parallelism"

"simultaneous multithreading: maximizing on-chip parallelism"

"simultaneous multithreading: maximizing on-chip parallelism"

"simultaneous multithreading: maximizing on-chip parallelism"

"simultaneous multithreading: maximizing on-chip parallelism"