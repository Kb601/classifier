cs418 lab 5




 
cs 418: laboratory 5 
 camera and perspective transforms

 introduction. 
in this exercise you will rewrite the camera transforms which dx uses inside the image module.
you will write the transform tview*tpers and apply it to a few simple objects.
the resulting program will allow you to view the objects in world, view, and 
screen coordinates. 


procedure:

first you need to download several example files. to do this, click on
each of the filenames shown below.  when the text window opens, use the
"save as" option to put the file in your own directory. name each file with
the same name as shown below. 

  cameratemplate.net 
  cameratemplate.cfg 



 part 1: 
cameratemplate.net
constructs a simple object made of two cubes and a few 
spheres (see images
). fill in the formulas in the 

compute 
modules to simulate the tview  and  tpers
matrices given in class and in watt pages 64 and 73. note that dx used a right-handed
display system, so you will have to negate the x view coordinate.
notice that the program 

computes 
 n, v, and u  vectors for you based on
the values of the interactors.
 note that the images (with the exeception of the world image) are
incorrect until you fill in the compute modules! 

 part 2:
add an interactor which independently (of window height) sets the width of the view window. note 
that this operation will distort the picture because it maps a rectangular region to a square.

 part 3:
convert the viewing frustrum given in the program from view coordinates back to world coordinates 
(using an inverse camera transform) and collect it with the original objects so that the 
viewpoint and viewing frustrum are visible in the world coordinate image window.

there are three image modules and one display module so that you can see the world, view, 
and screen coordinate systems, plus the final view of the object. the camera-display 
modules are hardcoded to view the computed perspective from the correct angle.

the following images are an example of what the program should produce.



world coordinates 


view coordinates 


screen coordinates 


screen projection



  questions/writeup:

 write out the formula from each compute module used for each transformation. 
be prepared to demo your synthetic camera, exercising all interactors given in the
template. the program should include the viewing frustrum in world coordinates. 
the program should also include the modification for a variable window width.
as usual, style counts. your network will be graded on readability and comments.

 what happens if a vertex of the object falls in the plane zv=0?

 remove the clipbox module and explain what you see if the object is behind the viewpoint.





back to main page


go to lab 6
 

last modified, 1/24/95, b. land.



 
copyright statement 
 


 cs418 lab 5
 cs418 lab 5
 cs418 lab 5
 cs418 lab 5
 cs418 lab 5
 cs418 lab 5
 cs418 lab 5
 cs418 lab 5
 cs418 lab 5
 cs418 lab 5