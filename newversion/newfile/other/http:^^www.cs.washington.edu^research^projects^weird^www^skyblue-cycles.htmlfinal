problem with skyblue and cycles




problem with skyblue and cycles



this note is to alert users of skyblue to a problem regarding its
handling of cycles of constraints.  skyblue is an incremental local
propagation constraint solvers for constraint hierarchies.  skyblue is more
general than the earlier deltablue algorithm, in that it supports
multi-output methods and allows cycles in the constraint graph.  skyblue
itself doesn't handle cycles, but does allow external cycle solvers to be
called to satisfy the constraints in the cycle.



the problem is that skyblue will not always gather enough constraints to
hand off to the cycle solver.  if the constraints in the immediate cycle
uniquely specify the values for their variables, all is well.  however, if
the constraints are redundant or incompatible, then additional constraints
must be considered as well, and skyblue won't necessarily identify these
needed constraints.  here is a trivial example.  suppose we have the
following collection of constraints, all required.


a = b
b = a
b = c
c = 5


the correct solution is of course a=b=c=5.  however, skyblue may select
just the two constraints a=b and b=a and hand them to the cycle solver.
they are redundant, and hence don't give unique values for a and b -- so
the cycle solver really needs the other constraints as well to find the
correct solution.



a straightforward solution to the problem would be simply to gather all the
constraints downstream from the cycle and pass these to the cycle solver.
however, in general this will result in larger cycles than necessary.
another approach would be first to partition the constraint graph into
cyclic and acyclic regions, based on its topology.  next we would process
all the required constraints in all regions (communicating variable values
between regions as they become known), then all the constraints at the next
strongest level, and so forth.  (this is the approach taken in the  ultraviolet algorithm; the approach
could also be adapted for use with skyblue.)



on the positive side, the basic skyblue algorithm -- the local propagation
mechanism, including multi-output constraints -- works fine.  in addition,
michael sannella's dissertation does describe the problem with gathering
constraints for an external cycle solver (see pages 43-44).  however, we
more recently realized that at least for some applications, the problem is
not an obscure one that comes up only in pathological cases, but can arise
in realistic cases.  so ...if your problem domain calls for local
propagation only, including multi-output constraints, skyblue will serve
its purpose well.  but it should be modified if it is to be used with
external cycle solvers.



 problem with skyblue and person
 problem with skyblue and person
 problem with skyblue and person
 problem with skyblue and person
 problem with skyblue and person
 problem with skyblue and person
 problem with skyblue and person
 problem with skyblue and person
 problem with skyblue and person
 problem with skyblue and person