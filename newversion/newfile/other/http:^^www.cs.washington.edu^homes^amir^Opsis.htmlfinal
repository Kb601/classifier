teaching binary tree algorithms by programming, proof, and animation 

   



opsis

opsis is a java applet designed to teach binary search tree algorithms.
opsis is not an animation program; rather, the system uses visual programming
in an abstract way. that is, the student implements a binary search tree
algorithm by manipulating abstract tree fragments (and not necessarily
just single nodes) in a visual manner. opsis is unique in that it combines
elements of programming, proof, and animation to enhance the learning experience.

you might want to see some  screen snapshots
of opsis first.











note: i recommend using netscape 3.0 (or higher) for best results.
as opsis is a java applet, you won't be able to load or save files
with your browser due to security restrictions. 
if you would like an application
version that can load and save files, then please subscribe
to the opsis channel at http://trans.havefun.com:5282. you can pick
up the "tuner" program necessary to receive this channel by
clicking on the "tune in now" graphic.


as this software is rather unconventional, i strongly recommend that
you read the documentation!
if you have comments, suggestions, or bug reports, please send them
to: amir@cs.washington.edu.  









to start opsis, press the button above (which will only appear
if you have a java capable browser). 
the applet may take a minute or two to start up.  please be patient.




i have found some java jdk bugs which affect opsis; these bugs are listed in the known problems page. in any
case, if you encounter bugs, please let me know.
warning: opsis may crash when running on the unix version of 
netscape; however, it seems to work fine with the castanet tuner
running under unix.


documentation

here is a description of opsis written for my vl '96 demonstration:
(contains snapshots of splay and avl tree algorithms) 


amir michail. opsis: a java applet for teaching binary tree algorithms.
[ html
/ acrobat
/ postscript
/ zip'd postscript
/ gzip'd postscript
] 


here is a paper i have written on the system:


amir michail. teaching binary tree algorithms through visual programming.
in symposium on visual languages, 1996. [ html
/ acrobat
/ postscript
/ zip'd postscript
/ gzip'd postscript
] 



finally, here are the powerpoint slides for my vl '96 talk: (warning
this file is 28 megs uncompressed) 


vl 96 slides, powerpoint 4.0 win/mac. [ download vl96.zip ] 






 teaching person person person by programming , proof , and animation
 teaching person person person by programming , proof , and animation
 teaching person person person by programming , proof , and animation
 teaching person person person by programming , proof , and animation
 teaching person person person by programming , proof , and animation
 teaching person person person by programming , proof , and animation
 teaching person person person by programming , proof , and animation
 teaching person person person by programming , proof , and animation
 teaching person person person by programming , proof , and animation
 teaching person person person by programming , proof , and animation