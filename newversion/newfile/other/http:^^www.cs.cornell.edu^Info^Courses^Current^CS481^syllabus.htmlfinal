cs381/481 fall 96 syllabus





cs381/481 fall 1996
automata and computability theory
syllabus




below is a tentative list of topics to be covered in the course.  they
fall into three major areas:


finite automata and regular sets
pushdown automata and context free languages
turing machines and effective computability


each area will comprise roughly a third of the course.  the entire
body of lecture notes is available in postscript format by clicking here,
or you can obtain hardcopy for $7 from linda mardel in 5147.

 the lecture notes are soon to be published as a textbook by
springer-verlag.  for that reason, i am very interested in your
comments and suggestions.  in particular, i will pay you $1 for each
mistake, typo, misspelling, etc. that you find that i don't already
know about.  [known errata]


suggested supplementary readings are taken from the text by
j. e. hopcroft and j. d. ullman, introduction to automata theory,
languages, and computation, addison-wesley, 1979 (h&u).

 in addition to these specific topics, it is important that by the
end of the course, you have a good general understanding of what it
means for a set to be regular, context-free, recursive, and r.e.; of
the capabilities of finite automata, pushdown automata, and turing
machines; and of how to describe sets using regular expressions and
context-free grammars.



finite automata and regular sets (h&u chps. 1-3)


lecture 1:  course roadmap and historical perspective

lecture 2:  operations on sets

lecture 3:  finite automata and regular sets

lecture 4:  more on regular sets

lecture 5:  nondeterministic finite automata

lecture 6:  the subset construction

lecture 7:  pattern matching and regular expressions

lecture 8:  more on pattern matching

lecture 9:  regular expressions and finite automata

supplementary lecture a:  kleene algebra and regular expressions

lecture 10:  homomorphisms

lecture 11:  limitations of finite automata

lecture 12:  using the pumping lemma

lecture 13:  dfa state minimization

lecture 14:  a minimization algorithm

lecture 15:  myhill-nerode relations

lecture 16:  the myhill-nerode theorem

supplementary lecture b:  collapsing nondeterministic automata

supplementary lecture c:  automata on terms

supplementary lecture d:  the myhill-nerode theorem for term automata

lecture 17:  two-way finite automata

lecture 18:  2dfas and regular sets

pushdown automata and context free languages (h&u chps. 4-6, 9.1)


lecture 19:  context-free grammars and languages

lecture 20:  balanced parentheses

lecture 21:  normal forms

lecture 22:  the pumping lemma for cfls

lecture 23:  pushdown automata

supplementary lecture e:  final state vs. empty stack

lecture 24:  pdas and cfgs

lecture 25:  simulating npdas by cfgs

supplementary lecture f:  deterministic pushdown automata

lecture 26:  parsing

lecture 27:  the cocke-kasami-younger algorithm

supplementary lecture g:  the chomsky-schutzenberger algorithm

supplementary lecture h:  parikh's theorem

turing machines and effective computability (h&u chps. 7-8)


lecture 28:  turing machines and effective computability

lecture 29:  more on turing machines

lecture 30:  equivalent models

lecture 31:  universal machines and diagonalization

lecture 32:  decidable and undecidable problems

lecture 33:  reductions

lecture 34:  rice's theorem

lecture 35:  undecidable problems about cfls

lecture 36:  other formalisms

lecture 37:  the lambda-calculus

supplementary lecture i:  while programs

supplementary lecture j:  beyond undecidability

lecture 38:  g&ouml;del's incompleteness theorem

lecture 39:  proof of the incompleteness theorem

supplementary lecture k:  g&ouml;del's proof



cs381/481 home page

 cs381/481 fall 96 syllabus
 cs381/481 fall 96 syllabus
 cs381/481 fall 96 syllabus
 cs381/481 fall 96 syllabus
 cs381/481 fall 96 syllabus
 cs381/481 fall 96 syllabus
 cs381/481 fall 96 syllabus
 cs381/481 fall 96 syllabus
 cs381/481 fall 96 syllabus
 cs381/481 fall 96 syllabus