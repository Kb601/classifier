cs 66.436 fall 1996 data structures home page
cs 66.436 fall 1996 data structures home page



current announcements

homework #4 is on-line.  it is due on december 9, 1996 at 11:59:59 pm"
 submission instructions  for homework 3
 grading criteria  for homework 3.  stay tuned for submission instructions...
there was a bug in the timing code for homework 3.  the calls needed address of time_t variables not the actual variables.
patrick fry's thursday office hours changed to 12:00-1:30pm.
homework #3 is on-line.  it is due on
november 18, 1996 at 11:59:59 pm.
previous announcements


latest lecture notes

 section 1, mehta 
 section 2, dugan 
previous lecture notes


course information

overview
textbook
course sections
 access to course information
syllabus
 grading policy
 collaboration policy
 late work policy


example source code
 
 source code for the data structures and examples in the
weiss textbook are available as a 
 tar file  
or you can get
the files  individually .

 stl sample source code is available as a 
 tar file  
or you can get
the files  individually
.


 previous announcements 

homework 2 deadline has been extended to monday, october 28 11:59:59.
to submit the second project, run the unix shell script:
        ~goldsd/public/submit         
from the directory in which your project resides.  this will
make your homework files accessible to the ta, and will email 
the location (directory) of those files to the ta.
see the newsgroup message for details.
copies of handouts for section 1 (mehta),
lectures 10, 11, 12, and 13, are available in the
computer science office, amos eaton, room 127.
updated the file clothest.txt.  the new file contains vertex entries for the emperor's shoes and cloak which were missing from the original.
homework two is on-line.  it is due on october 23, 1996 at 11:59:59 pm.
the last day you can hand in homework one is friday october 4, 1996
at 11:59:59 pm.  you will lose a maximum of 30% off your grade on the
project if you turn in the program by this date.
the format of this home page has changed (slightly).  the most
recent course announcements will be listed in this section; older
announcements will also be available.
the deadline for  homework one 
has been changed to september 25.

overview

this course focuses on the basic principles of data structures.
students learn the basic data structures and algorithms that are used
in applications throughout computer science.  the course begins with a
thorough review of object oriented programming and c++.  the core data
structures are then introduced including: pointers, arrays, stacks,
linked lists, trees, graphs, hash tables, and queues.  these data
structures are then applied to problems like dictionaries, discrete
event simulation, shortest paths, and topological sorting.  using
the data structures as a base, students then investigate some of the
fundamental algorithms of computer science.  these include: sorting,
balanced trees, graphs, np-hard problems, splay trees, and memory
management.  in addition to course lectures and exams, students will
also be responsible for four significant programming projects.

textbook

algorithms, data structures, and problem solving with c++, by mark
allen weiss, addison-wesley publishing, isbn 0-8053-1666-3, hardcover,
820 pages, 1996.

course sections

section 1
course time/location

course time: mw 4-5:20 pm 
location: sage 3101

instructor: alok mehta 

e-mail: mehtaa@cs.rpi.edu
office hours: mw 5:30-6:30 pm
office location: amos eaton 218
(home) phone:  518-785-7576 (best time to call: 
evenings, until 10:00 pm)



teaching assistant: patrick fry 

e-mail: fryp@cs.rpi.edu
office hours: m 10-11:30am, th 12-1:30 pm
office location: amos eaton 211
office phone: x 2816


 section 2
course time/location

course time: mw 9:00-10:20 am 
location: sage 3101


instructor: bob dugan

e-mail: dugan@rpi.edu
office hours: mw 10:30-11:30 am
office location: amos eaton 211
office phone:  518-276-2816
other ways of finding bob


teaching assistant: david goldschmidt

e-mail: goldsd@cs.rpi.edu
office hours: tue 5:30-8:30 pm
office location: sage 1112
office phone: 518-276-4849 (during office hours only)
other ways of finding dave


accessing course information electronically


in order to complete the projects for this course, you will need an
rcs account.  this is a computer account on the computer systems
here at rpi.  if you don't have an rcs account you need to contact
us or the tas to get one!


the course instructors will strive to maintain as much information
about the course on-line as possible.  to access this information, you
should be familiar with internet applications such as email,
usenet, and web browsing tools.


if you don't have experience using these tools, pick up the
"rcs for dummies" booklet, written by eta kappa nu, and available
at the vcc help desk.  this booklet will help you get started.

home page

the home page for this course is located at

http://www.cs.rpi.edu/~dugan/data_structures .
links to course lecture notes and additional material are accessible from 
this home page.

newsgroup


a newsgroup, 

news:rpi.courses.fall96.datastructures, 
has been set up for this course.


this is a recommended way to ask a question of your fellow
class mates... or to ask us or the tas a question that you think everyone
would be interested in hearing about... or to post information that
you think would be useful to the class.

email


if you have a personal or private question or concern, then just
send the instructors or the tas e-mail, don't post it to the newsgroup.

course syllabus




  
  august 1996



   sunday	
   monday	
   tuesday	
   wednesday
   thursday	
   friday	
   saturday	


 week 1
   25	
  26 introduction and overview dugan, mehta
   27
  28 c++ review, basic data types dugan, mehta
   29	
   30	
   31	







  
  september 1996



   sunday	
   monday	
   tuesday	
   wednesday
   thursday	
   friday	
   saturday	


 week 2
  1	
  2 labor day  no class
   3
  4 oopi: objects, classes, adts dugan, mehta
   5	
   6	
   7	



 week 3
   8	
  9 oop ii: templates inheritance, stl dugan, mehta
   10	
  11 basic data structures dugan, mehta
   12	
   13	
   14	


 week 4
   15	
  16 basic data structures (cont.) dugan, mehta
   17	
  18 recursion dugan, mehta
   19	
   20	
   21	


 week 5
  22	
  23 trees, traversal, expressions, game playing dugan, mehta 
   24	
  25 graphs, searching, and traversal graphs dugan, mehtahomework#1 due
   26	
   27	
   28	


 week 6
  29	
  30  minimum spanning trees, topological sorting dugan, mehta
   	
   	
   	
   	







  
  october 1996



   sunday	
   monday	
   tuesday	
   wednesday
   thursday	
   friday	
   saturday	


 week 6
   	
   
   1
  2 shortest paths dugan, mehta
   3	
   4	
   5	



 week 7
   6	
  7 dictionaries, bsts, and hash tables dugan, mehta
   8 	
   9 huffman codes dugan, mehta
   10	
   11	
   12	


 week 8
   13	
  14 midterm break  no class 
   15	
  16   discrete event simulation dugan, mehta
   17	
   18	
   19	


 week 9
  20	
  21 midterm exam dugan, mehta
   22	
  23 analysis of algorithms dugan, mehta
   24	
   25	
   26	


 week 10
  27	
  28 sorting dugan, mehtahomework#2 due
   29	
  30 sorting (cont.) dugan, mehta
   31	
   	







  
  november 1996



   sunday	
   monday	
   tuesday	
   wednesday
   thursday	
   friday	
   saturday	


 week 10
    
    
   
   
   
  1
  2 


 week 11
  3 
  4 linked lists dugan, mehta
   5
  6 trees, bst  dugan, mehta
   7	
   8	
   9	



 week 12
   10	
  11graphs dugan, mehta
   12	
   13graphs (cont.) dugan, mehta
   14	
   15	
   16	


 week 13
   17	
  18 hash tables dugan, mehta
homework #3 due

   19	
  20 partially ordered trees and heaps dugan, mehta
   21	
   22	
   23	


 week 14
  24	
  25 avl trees dugan, mehta
   26	
  27 thanksgiving no class 
   28	
   29	
   30	








  
  december 1996



   sunday	
   monday	
   tuesday	
   wednesday
   thursday	
   friday	
   saturday	


 week 15
  1  
  2  memory management, free lists, garbage collection  dugan, mehta
  3  
  4  summary and review  dugan, mehta
  5  
  6  
  7 


 week 16
  8 
  9 final exam dugan, mehtahomework#4 due
   
   
   	
   	
   	





grading policy

your grade will be based on the following evaluations:





   task	
   weight	
   section one average 
   section two average 



    homework #1 
    15 % 
    38/100  
    48/100  



    homework #2 
    15 % 
     
     



    homework #3 
    15 % 
     
     



    homework #4 
    15 % 
     
     



    mid-term exam 
    20 % 
    
    70/80 



    final exam 
    20 % 
    
    



   total	
   100 %


policy on collaboration

no collaboration is permitted on exams.

you are encouraged to work with other students in the class on the
assignments.  useful forms of collaboration include discussing design
alternatives, details of algorithms and data structures, possible
sources of reusable code, and help with debugging, compiling,
makefiles, etc.

you are also encouraged to practice code reuse, with the stipulation
that any reused code submitted as part of your assignment must be
clearly and explicitly attributed.  code that can be reused includes
that found in the textbooks, code from previous work you have done (in
this class or others), and code from other books or internet sites.

you may not reuse code written by another student in the class.  

the easiest way to attribute any code that you reuse is with a
comment.  you must give enough information so that the tas can find
the code themselves.  examples:

  /* the following code is from p.111 of weiss textbook */
  class vector { ...

  /* the following code is from my cs i project, feb 1995. */

  /* the following code was downloaded from ftp://ftp.cs.rpi.edu/pub/... */

  /* the following code is from the book "advanced c++" by james coplien,
   * addison-wesley, 1992, p.152
   */


collaboration and discussion does not mean that the assignments may be
done jointly; each assignment you submit must be 100 percent your own
work.  you must be especially carefull when discussing another
student's code (perhaps to help with finding a bug).  do not copy any
of the code, either on paper or electronically.  do not write any code
for the other student, even just to fix a typographical error.  do not
look and another student's code and then sit down and write nearly
identical (but not quite) code yourself.  do not "paraphrase" code
from another source and fail to attribute it in a comment.

any code submitted which the tas find too similar to another students
code, or any code which is similar to code from a book or another
source which has not been properly attributed, will result in a zero
for the assignment in question and possibly a failing course grade.
policy on late work

homeworks are due at 11:59:59 pm, on the due date.  late homeworks will 
be accepted with a penalty of 10% per day for 3 days.  after that, the
project will not be accepted.

exams are to be taken at the specified date and time.  if you miss the
exam, you will receive a 0.

sometimes things happen. if there are circumstances that prevent you
from meeting your obligations for this course, you need to talk to us
or the tas to make arrangements in advance.
dropping the course

we want you to stay in the course!  please talk to us before you 
decide to drop.  if things can't work out, the drop
date is september 30, 1996



bob dugan dugan@rpi.edu  
alok mehta  mehtaa@cs.rpi.edu 



cs 66.436 fall 1996 data structures home page
cs 66.436 fall 1996 data structures home page
cs 66.436 fall 1996 data structures home page
cs 66.436 fall 1996 data structures home page
cs 66.436 fall 1996 data structures home page
cs 66.436 fall 1996 data structures home page
cs 66.436 fall 1996 data structures home page
cs 66.436 fall 1996 data structures home page
cs 66.436 fall 1996 data structures home page
cs 66.436 fall 1996 data structures home page