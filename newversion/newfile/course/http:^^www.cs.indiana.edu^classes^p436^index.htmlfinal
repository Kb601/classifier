p436/536 home page






p436/536
operating systems
 




recent announcements are at the bottom of the page!

-->

instructor
scott stoller
t.a.
shamugasundar balasubramaniam


hours

lectures: monday and wednesday, 4:00pm - 5:15pm, in bh304.
discussion: thursday, 5:45pm - 6:35pm, in bh003.
instructor's office hours: monday and wednesday, 5:15pm - 6:15pm, or by
appointment. lindley hall 201d.
t.a.'s office hours: tuesday and thursday, 4:15pm - 5:15pm. lindley
hall 330a.



official description

p436,
p536


tentative syllabus


lecturestopic
1introduction
2-10processes: address spaces, threads, synchronization,
                deadlock, scheduling
11-15memory: segmentation, paging, virtual memory
16-18i/o, filesystems.
19-20protection and security
21distributed systems: introduction
22-23communication: client-server, rpc, group communication
24-26distributed filesystems
27-28distributed shared memory or authentication protocols


if we can get through the earlier topics more quickly, i will
happily spend more time discussing distributed systems.


the lectures are based in part on tom anderson's lecture notes for
cs162 at uc berkeley.


textbook

andrew tanenbaum, modern operating systems
(prentice hall, 1992).


project

the project is to design and implement parts of a small operating
system, called nachos, which runs
in a simulator that runs on sun workstations.  you will be given a
"skeleton" of the operating system and will be asked to implement some
of the missing parts, e.g., synchronization primitives for threads,
virtual memory management, and a file system.  you will work on the
project in small teams.  the programming is (almost) in c.  a few simple
features of c++ are used; they will be explained as needed.  here is a
brief overview of nachos, from its developers at
uc berkeley.

nachos is installed locally in ~c536/nachos-3.4 on both the
burrow and the sharks.


project mechanics

click above for information on accounts, software tools, etc.


grading

the breakdown is:

project + occasional problem sets 40%
midterm examination 23%
final examination 37%

grading on the project will emphasize good design as well as working
code.  graduate students will be asked to implement additional features
found in real operating systems; undergraduates can implement these
features for extra credit.  the midterm will be a 75-minute, in-class
exam.  the final will be a 2-hour exam held at the time specified in the
registrar's schedule of final
examinations.  the weights of the two exams are in proportion to
their length.  both exams will be closed book, closed notes, etc.  the
same exams will be used for 436 and 536, though separate curves will be
used to convert numerical scores to letter grades.


course newsgroup

ac.c.436 will be used for both 436 and 536.  if you have questions about
the lectures or the project, this is a good place to ask them, so that
other students can benefit from your questions.  if you see a question
and (think you) know the answer, post it!  this will help your
classmates and show us that you know what's going on; we'll re-read the
postings in the newsgroup when assigning grades.  the instructor or the
t.a. will periodically read the newsgroup and post answers or
corrections to answers, if needed.






weekly announcements

 



week of november 18

textbook readings: tanenbaum, chapters 10 and 11 (for this week and next).


project: for project 4, you can get 15% extra credit by implementing
swap-space management that is efficient for sparsely-used address
spaces.  one way to do this is the first scheme described in a recent posting about swap space.



week of november 11

project: here is the projects 3 and 4 faq.


week of november 4

textbook readings: tanenbaum, chapter 9.


project:

(1) projects 3 and 4 were distributed in
last thursday's discussion section.


(2) here is some advice for teams
that had difficulty with project 2.


week of october 28

textbook readings: finish tanenbaum, chapters 4 and 5.


final exam: the final exam will be 5:00pm-7:00pm on wednesday, december
18, in bh 304.  if you have a problem with this, let me know
immediately.

project: remember that proj 2 is due on fri, nov. 1.


week of october 21

textbook readings: tanenbaum, chapters 4 and 5 (for this week and next).


project:

(1) you don't need to freeze the files from project 1; you can continue
to modify them until you submit project 2.  revised instructions for
submitting and freezing files are in the project mechanics handout; the
changes are summarized in a news posting.


(2) revised project schedule:

proj 2 due:            fri, nov. 1.
proj 3 design review:  fri, nov. 8, and sat, nov. 9
proj 3 due:	       fri, nov. 15
proj 4 design review:  fri, nov. 22, and sat, nov. 23
proj 4 due:	       fri, dec. 6



midterm:

(1) as mentioned in a news posting, the answers to questions 3 and 5
have been revised since printed solutions were distributed on oct. 16.
so, you might want to look at the revised brief solutions to the midterm.


(2) click for full-size plots showing the midterm scores for 436 and midterm scores for 536.  some
statistics appear below.  here are smaller plots:




grades: you can get an idea of your standing in the course from the
following statistics (and the above plots for the midterm).

statistics for 436:

itemmeanstddev
project 0 (out of 10)9.21.3
problem set 1 (out of 15)7.24.7
midterm (out of 90)58 (64%)11


statistics for 536:

itemmeanstddev
project 0 (out of 10)9.51.3
problem set 1 (out of 20)14.74.4
midterm (out of 90)70 (78%)15


week of october 14

midterm: the same exams will be used for 436 and 536, though separate
curves will be used to convert numerical scores to letter grades.
here are brief solutions to the midterm.


project:

(1) design reviews for project 2 will be held on fri (oct. 18, 1pm-6pm),
sat (oct. 19, 9am-2pm), and mon (oct. 21., 5:30pm-8pm).  a sign-up sheet
will be available at the midterm and during the discussion section.


(2) project 5 has been cancelled.  project 4 will be the last project,
unless overwhelming popular demand prompts resurrection of project 5.


week of october 7

textbook readings: tanenbaum, chapter 3 (continued).


project: some comments on projects 1 and 2 have been collected in the projects 1 and 2 faq (last updated oct. 11).


midterm:

(1) the midterm will cover material up to and including the lecture of
oct. 7.  this corresponds to all of the assigned reading so far, except
sections 3.4-3.6 of tanenbaum.  the midterm focuses on the material
covered in lecture and in the textbook, not on nachos.


(2) you might want to look at these practice problems for midterm.  these
are intended to give you a feeling for the planned level of difficulty
of the exam questions.  here are brief solutions to practice
problems for midterm.


week of september 30

textbook readings: tanenbaum, chapter 3.


project: a sign-up sheet to schedule design reviews for project 1 will be
available in this week's discussion section.  as per the handout, the
design reviews should occur on fri and sat of this week.


week of september 23

textbook readings: finish tanenbaum, chapter 6.  tanenbaum, sections 2.4-2.5.


homework: problem set 1 was
distributed on sep. 23.  it is a problem set, not a programming
assignment.  it must be done individually, not in teams.  it is
technically due in lecture on mon., sep. 30, though i suggest you try to
finish it by fri., sep 27, so you can get started on project 1.  some
comments on problem set 1 have been collected in the problem set 1 faq.


exam schedule: the midterm will be in-class on wed., oct. 16.


project:

(1) project 1 was distributed on
sep. 25.  it is due by the end of the day on fri, oct. 11.  design
reviews for project 1 will be held on fri and sat, oct. 4 and 5.
projects 1 and 2 are the same for 436 and 536.


(2) we strongly recommend that you carefully read both thomas narten's
a road map through nachos (except the
parts about virtual memory) and mike o'donnell's guide
to reading the [nachos] source code, if you haven't already.


(3) to help you schedule your semester, here are tentative due dates for future projects:
project 3, due sun, nov. 10; project 4, due sun, nov. 24; project 5, due
sat, dec. 14.  [this has changed; see below.]



week of september 16

temporary change in office hours: on sep. 16, the instructor's office
hour will be cancelled.  a replacement office hour will be held on sep. 17,
11am-12am.


textbook readings: start tanenbaum, chapter 6.


project: project 0 is due on sep. 20.  the instructions in the project
mechanics handout for submitting a project were flawed.  a posting to
ac.c.436 describes the problem; you can also read that posting here.


week of september 9

textbook readings: tanenbaum, sections 2.1-2.3 and 12.1.


project:


(1) you should read a quick
introduction to c++, by tom anderson.  this was distributed in the
discussion section on sep. 5; if you didn't get a copy, you can print one
yourself, or you can ask us to print one.  i recommend reading it even
if you are familiar with c++, because it contains some useful stylistic
guidelines.  the code for the stack example is in
~c536/docs/c++example/.


(2) a detailed version of project 0 was
distributed on sep. 11.  it is due on sep. 20.

week of september 2

textbook readings: tanenbaum, chapter 1


project:


(1) try to form teams by monday, sep. 9, so that you can start on
assignment 1 when it is distributed.  as mentioned in the project
mechanics handout, you should notify us by email when you form a
team.


(2) read the project mechanics page.


(3) start reading the a road map through nachos and the
code in ~c536/nachos-3.4/code/threads.  printouts of the roadmap
and the threads code will be distributed on sep. 4.
another very helpful resource is mike o'donnell's guide
to reading the [nachos] source code.  mike's guide is available only
in html format, so we won't be supplying printouts; this doesn't mean
you shouldn't read it!




p436/536 home page
p436/536 home page
p436/536 home page
p436/536 home page
p436/536 home page
p436/536 home page
p436/536 home page
p436/536 home page
p436/536 home page
p436/536 home page