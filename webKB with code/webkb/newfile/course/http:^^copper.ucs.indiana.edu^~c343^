c343 home page




csci c343:  data structures, fall 1996



contents


 useful links

 general information
 office hours
 communication
 course content

check out the  notes on boyer-moore pattern matching .

 textbooks
 participation
 quizzes and exams
 programming projects
 grading
 course evaluation
 miscellaneous 




general information
 instructor:

 
david s. wise, 
dswise@cs.indiana.edu


 associate instructors

 
eliana colunga
ecolunga@cs.indiana.edu
 
rutvik desai
rudesai@cs.indiana.edu


 prerequisite c212 (c++), and corequisite c251.
 csci c212:  introduction to computer science

 lecture
 section 1145, mwf, 9:05 - 9:55 a.m., kh 212

 discussion sections
 section 1146, w, 3:35 - 4:25pm, bh 142 
 section 1147, r, 8:00 - 8:50am, lh 019 

 local newsgroup
 ac.csci.c343




office hours



david s. wise: mt 11:00pm - 12:00 pm in lh 330h
dswise@cs.indiana.edu

eliana colunga: 10-11 mw and 11-12 tr in lh 330i
ecolunga@cs.indiana.edu

rutvik desai: 1-2 tr in lh 330i
rudesai@cs.indiana.edu




communication

the course newsgroup, ac.csci.c343, will be
used to post announcements and important information.  please feel
free to post questions related to the course, answer the questions of
others, and share related information with the class.  do not post
anonomously. make a habit of looking for new notes every day.

on individual or immediate matters, contact your instructor or
associate instructor via email. you might also want to regularly read
cs.students for postings pertinent to
students in our cs department.

 

course content

this course is an introduction to application development in the unix
environment using the c++ language.

we will cover the following topics: 

 
 abstract data types;
 linear sturctures, stack, queues, dequeues; 
 linear allocation, linked allocation; 
 circular linking, double linking, header cells; 
 classic algorithms illustrating good use of these structures; 
 trees, binary trees, naturally corresponding binary trees;
 tree traversal: preorder; inorder; postorder. 
 threading of trees:  inorder, level order; 
 arrays:  vectors, matrices, sparse matrices,strings; 
 searching    strings, lists;
 storage management:  reference counting, garbage collection;
 searching trees:  avl trees, b-trees;
 priority queues;
 application "in the rough."  (how to tell the forest from the trees.)
 

a detailed course outline, with
week-by-week course schedule, is available.



textbooks

 
 required 


lewis, h.r. and denenberg, l.,
data structures & their algorithms 3rd ed.,
harper collins (1991).   



 

 reference 
 
knuth, d.l., fundamental algorithms, the art of
computer programming i, 2nd ed.,
addison-wesley, 1973.   

deitel, h.m. and deitel, p.j., c++ how to program,
prentice hall, 1994.   

cline, marshall p. and lomow, greg a., c++ faqs,
addison-wesley, 1995.   



 participation participation
in the class can take many forms: attendence at lectures and
discussions, asking and answering questions posed in class and on the
newsgroup, and participating in group activities during lecture.  in
addition, there will be homework problems assigned in lecture that
will be due the following lecture.  these problem sets will be short,
hand-written and may not always be collected. 



quizzes and exams 

there will two 30-minute quizzes,
two 50-minute tests, and a two-hour final exam.
they will be weighted roughly 50:100:200 for a total of 500 points,
but (if, for instance, one turns out to be inordinately difficult)
i reserve the right to tune these weights.
the exams are subjective (written paragraphs, code) mostly, and it is
difficult to assure that one point on the first quiz is the same
value as another point on the final exam.


september 23, quiz
october 7, test
november 8, test
october 25, quiz
december 16, examination

 the first quiz and the two tests are dates that professor wise
will be absent;  those dates were chosen to avoid
cumulative disruption of the course.
notably, the first is a jewish holiday, and some others, as well,
 may be absent;  of course, there shall be a make-up quiz on
september 24 for any students also affected.


the final exam will be held in the regular classroom.  the exam is on

monday, december 16 at 10:15am - 12:15pm



grading 

grades are calculated as follows:  

 in-class tests 48%  

 participation 4%  

 programming assignments 48% 

note: you must pass the final exam to pass the course!

the course
gradebook will be updated regularly. 



programming projects 

this is the most important component to the course.  there will be a
programming assigment due almost every week on thursday or friday.
later in the course you will be able to notice that
these are structured into two streams,
and solving an early problem in the stream is necessary
to easy solutions to the later ones.  do not fall behind!


you will submit your source code electronically using the c343 handin program.  this
handin program does not
 compile,
run, debug, or test your
code (that's your job); it merely saves your file in a convenient
location so your ai can grade it later.


all programs must run under cxx.  it is recommended that you use the
ucs machine named zinc.  programs will be judged on
correctness, completeness, efficiency, generality, and aesthetics.
programs that do not compile will earn zero points.

program descriptions will appear below as they are assigned.  in
general, solutions to the programming projects will not be
supplied.

programs are due by 11:59 p.m. or 4:59 p.m., according to the system clock, on the
specified date. by default that there
is no grace period following this deadline.
programs submitted late, even just one second, will not be accepted.




project 0, due 9/5
project 1, due 9/12
    (solution)
project 2, due 9/19 
    (solution)
project 3, due 9/26
    (solution) - by thomas stuckey
project 4, due 10/4 and 10/11
    (solution) - by hongning wei
project 5, due 10/18
    (solution) - by rafi dowty
project 6, due 10/25
    (solution) - by konstantine ishkov
project 7, due 11/1
    (solution) - by linda vinke
project 8, due 11/15
project 9, due 11/25
project 10, due 12/6





course evaluations

course evaluations will be performed electronically.  at some point
you should receive an email message containing your individual
password, which you'll need to gain entry into the system.  as the end
of the semester approaches, we'll provide a link here into the
evaluation system.



useful links 



the c211 tutorial


the 343 handin program 


course
gradebook


ac.csci.c343


number representations


iu address book

 note:  computer science career day is october 9;  interview fair, october 10.



miscellaneous


 

 `incompletes' are given only because of an unforeseen emergency
that is preceded by diligent work, not for a pattern of weak performance.
no student will be allowed to do ``extra work'' to raise his final
grade or to make up missing work.  the last day (until 4 p.m.) to
withdraw with an automatic w is wednesday, october 30, 1996.

 programs are due on the announced date, because solutions
may be discussed immediately thereafter;  late assignments would
be accepted
only under the conditions similar to what could justify an incomplete.
all grades become final one week after the material is returned
to you. no claims, however justifiable, will be considered after this
deadline.  if there is a foreseeable
medical or personal reason requiring you to miss a
test you must present your excuse in advance and in writing.  in all
cases, we require some physical proof of your claim.  

 of course, we encourage discussion and debates over the
course material, but you are expected to complete all work independently.
joint work
(defined as pen hitting paper or fingers hitting keys)
of any type is simply not permitted.
similarly, we encourage you to use libraries both of books
and of computer
programs but, whenever  you use such archival material,
you must cite
the source completely.  (not only is this practice good ethics, but
a citation is often the most helpful and longest-lived
documentation for a program.)

read the computer science
department's 
statement on academic integrity to be sure you understand
the rules under which cs courses operate.  cases of academic
dishonesty will be reported to the office of student ethics, a branch
of the office of the dean of students.