s212 home page




csci s212:  introduction to software systems (honors), spring 1995



contents


 useful links

 general information
 office hours
 communication
 course content
 textbooks
 participation
 quizzes and exams
 programming projects
 grading
 course evaluation
 miscellaneous 




general information
 instructor:

 
david s. wise, 
dswise@cs.indiana.edu


 associate instructor

 
jeremy frens,
jfrens@cs.indiana.edu



 prerequisite

 csci s211:  introduction to computer science

 lecture
 section 2122, mwf, 9:05 - 9:55 a.m., lh 019

 discussion section
 section 2123, f, 10:10 - 11:00 a.m., lh 019 

 local newsgroup
 ac.csci.s212




office hours

david wise in lh 330h

 m 3:30pm - 4:30pm
 tw 1:00pm - 2:00pm


jeremy frens in lh 330i

 mt 2:30pm - 3:30pm
 w 10am - 12noon
 r 2pm - 4pm (s212 priority)




communication

the course newsgroup, ac.csci.s212, will be
used to post announcements and important information.  please feel
free to post questions related to the course, answer the questions of
others, and share related information with the class.  do not post
anonomously. make a habit of looking for new notes every day.

on individual or immediate matters, contact your instructor or
associate instructor via email. you might also want to regularly read
cs.students for postings pertinent to
students in our cs department.

 

course content

this course is an introduction to application development in the unix
environment using the c++ language.

we will cover the following topics: 

 
 basic unix
 control structures, functions, arrays, structs 
 i/o streams, strings, pointers, references, bits 
 oo concepts, objects, classes, methods, messages 
 function overloading, constructors, destructors
 dynamic memory allocations, recursive data structures 
 inheritance, polymorphism, templates 
 linking external libraries, makefile 
 shell programming, processes, signals, pipes
 

a detailed course outline, with
week-by-week course schedule, is also abuilding.



textbooks

 
 required 


deitel, h.m. and deitel, p.j., c++ how to program,
prentice hall, 1994.   

sobel, m.g., unix system v: a practical guide 3rd ed.,
benjamin/cummings (1995).   


 

 reference
 

cline, marshall p. and lomow, greg a., c++ faqs,
addison-wesley, 1995.   
glass, graham, unix for programmers and users, a complete
guide, prentice hall, 1993.   



 participation participation
in the class can take many forms: attendence at lectures and
discussions, asking and answering questions posed in class and on the
newsgroup, and participating in group activities during lecture.  in
addition, there will be homework problems assigned in lecture that
will be due the following lecture.  these problem sets will be short,
hand-written and may not always be collected. 



quizzes and exams 

there will two 30-minute quizzes early on, and
two 50-minute quizzes given at four week intervals:


january 24
february 14
february 26 (midterm)
march 29



the final exam will be held in the regular classroom.  the exam is on

friday, may 3 at 8 - 10 a.m.



grading 

grades are calculated as follows:  

 quizzes 25%  

 participation 10%  

 projects 40%  

 final 25%  

note: you must pass the final exam to pass the course!

the course
gradebook will be updated regularly. 



programming projects 

this is the most important component to the course.  there will be a
project due every week.  most projects will entail writing several
small programs.

you will submit your source code electronically using the s212 handin program.  this
handin program does not compile, run, debug, or test your
code (that's your job); it merely saves your file in a convenient
location so your ai can grade it later.  submit ascii source code
files only!  never submit object or executable code, please!  you may
submit a program as many times as you want up to the deadline. only
your last submission will be graded.

all programs must run under g++.  it is recommended that you use the
ucs machine named copper.  programs will be judged on
correctness, completeness, efficiency, generality, and aesthetics.
programs that do not compile will earn zero points.

project descriptions will appear below as they are assigned.  in
general, solutions to the programming projects will not be
supplied.

projects are due by 11:59 p.m., according to the system clock, on the
specified date. there is no grace period following this deadline.
programs submitted late, even just one second, will not be accepted.



project 1, due 1/11
	and solutions.
project 2, due 1/18
        and solutions.
project 3, due 1/25
        and solutions.
project 4, due 2/1
        and solutions.
project 5, due 2/8
        and solutions.
project 6, due 2/15
        and solutions.
project 7, due 2/22
        and solutions.
project 8, due 2/29
        and solutions.
project 9, due 3/7
project 10, due 3/27
project 11, due 4/4
project 12, due 4/11
project 13, due 4/18





course evaluations

course evaluations will be performed electronically.  at some point
you should receive an email message containing your individual
password, which you'll need to gain entry into the system.  as the end
of the semester approaches, we'll provide a link into the evaluation
system.  


 instructor wise
 associate
instructor frens






useful links 



the c211 tutorial


the 212 handin program 


course gradebook


ac.csci.s212


number representations


floating point representations

 general
programming tips from jeremy (including information on gdb, coding
tips, and (coming soon) makefiles)


iu address book


the acm homepage





miscellaneous

 

 `incompletes' are given only because of an unforeseen emergency
that is preceded by diligent work, not for a pattern of weak performance.
no student will be allowed to do ``extra work'' to raise his final
grade or to make up missing work.  the last day (until 4 p.m.) to
withdraw with an automatic w is wednesday, march 6, 1996.

 programs are due on the announced date, because solutions
may be discussed immediately thereafter;  late assignments would
be accepted
only under the conditions similar to what could justify an incomplete.
all grades become final one week after the material is returned
to you. no claims, however justifiable, will be considered after this
deadline.  if there is a medical or personal reason requiring you to miss a
quiz you must present your excuse in advance and in writing.  in all
cases, we require some physical proof of your claim.  

 you are expected to complete all work independently.  joint work
of any type is simply not permitted.  read the computer science
department's 
statement on academic integrity to be sure you understand
the rules under which cs courses operate.  cases of academic
dishonesty will be reported to the office of student ethics, a branch
of the office of the dean of students.