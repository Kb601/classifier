cse 590 zp: high performance scientific computing in zpl




 
 


cse 590 zp
high performance scientific computing in zpl
larry snyder and the zpl team
autumn quarter 1996
wednesday, 2:30-3:30 pm 
sieg 422 (oct. 2, 1996), loew 111 (all other days) 






welcome to the cse 590 zp home page!



please send mail to majordomo@cs with
"subscribe cse590zpl" in the body of the message to subscribe
to the class mailing list.



students may also be interested in joining the zpl-users
mailing list.  this mailing list is used to distribute information
about compiler and libraray releases and other zpl related
information.  to be added to the mailing list, send mail to majordomo@cs with
"subscribe zpl-users" in the body of the message.

description

zpl is a new scientific
programming language suitable for computations previously written in
fortran, c, etc.  zpl is an array language that dramatically
simplifies programming by eliminating nuisance looping and indexing.
zpl runs fast on modern machines, including parallel supercomputers,
allowing programmers to develop code on their workstations and
trivially migrate them to the largest parallel machines simply by
recompiling.  zpl was developed at uw, and is just being released to
the scientific computing community.


cse590-zp is a class designed for scientists and engineers who are 
not computer scientists, but who want to learn how to use modern 
languages and supercomputers effectively for scientific 
computation.  the class will cover the following topics:

     the state-of-the-art in high performance computing.
     zpl syntax and semantics.
     algorithms exploiting high performance parallel machines.
     wysiwyg performance -- writing fast programs easily.
     developing zpl programs from workstation to supercomputer.
     how well does your program perform? i.e. doing more "science"
	with a faster program.
    prototyping scientific computations in matlab and zpl.


text book

none.  the class will rely on materials on the web.  documents can be found on
in the zpl web pages.
specifically, we will follow closely the zpl
programming guide (new version as of 10/03/96).

prerequisites
familiarity with some scientific computation e.g.  fortran, c or
matlab programming, on a unix platform will be assumed.


the class is variable (1-3) credit, cr/nc or audit.  students will 
write, debug and run a zpl program selected from their technical 
discipline.  suitable computations range from whole applications to 
kernels (inner loops) of a scientific computation.

other useful information

course syllabus, including lecture notes.

how to apply for an ncsa block grant account (for uw faculty, staff and students only)

how to compile zpl programs using the remote
zpl compiler

other important links





   
  sung-eun choi
   
  last modified: wednesday 9 october 1996