maged michael's urcs home page

 

maged michael, urcs grad student -->
maged michael,  ph.d. student




 journal and conference papers 
 



  g. hunt, m. michael, s. parthasarathy, and m. scott, ``an
	efficient algorithm for priority queue heaps,'' technical
	report 560, department of computer science, university of
	rochester, december 1994. a revised version to appear in
	information processing letters (ipl). 
	postscript .

  a. nguyen, m. michael, a. sharma, and j. torrellas, ``the
	augmint multiprocessor simulation toolkit for intel x86
	architectures,'' in proceedings of the 1996 ieee
	international conference on computer design (iccd),
	austin, tx, october 1996.  
	postscript.

  m. michael and m. scott,``simple, fast, and practical
	non-blocking and blocking concurrent queue
	algorithms,'' in proceedings of the 15th acm symposium on
	principles of distributed computing (podc),
	pp. 267-275, philadelphia, pa, may 1996.   postscript.

  m. michael and m. scott, ``implementation of atomic
	primitives on distributed shared memory multiprocessors,''
	in proceedings of the first ieee international symposium on
	high performance computer architecture (hpca),
	pp. 222-231, raleigh, nc, january 1995. 
	postscript.



 posters and workshops 
 

  a. nguyen, m. michael, a. sharma, and j. torrellas,
	``augmint: an execution-driven multiprocessor simulation
	toolkit for intel x86 architecture,'' poster,
	supercomputing '96 (sc'96),
	pittsburgh, pa, november 1996.

  m. michael, b. lim, a. nanda, and m. scott, ``protocol
	processors vs. custom hardware coherence adaptors for
	smp-based cc-numa multiprocessor architectures,'' sixth
	international workshop on scalable shared memory
	multiprocessors (ssmm),
	cambridge, ma, october 1996.

  m. scott, w. li, s. dwarkadas, l. kontothanassis, g. hunt,
        m. michael, r. stets, n. hardavellas, w. meira, a. poulos,
        m. cierniak, s. parthasarathy, and m. zaki,
        ``implementation of cashmere,'' sixth international
        workshop on scalable shared memory multiprocessors (ssmm),
        cambridge, ma, october 1996. 
        html.

  m. michael and m. scott, ``scalable atomic primitives for
	distributed shared memory multiprocessors,'' in
	proc. of the fourth international workshop on scalable
	shared memory multiprocessors (ssmm), chicago, il,
	april 1994.  
	postscript.




 technical reports and submitted for publication 
 

  m. michael and m. scott, ``concurrent update on
	multiprogrammed shared memory multiprocessors,'' technical
	report 614, dept. of computer science, univ. of rochester,
	april 1996.  
	postscript.

  m. scott and m. michael, ``the topological barrier: a
	synchronization abstraction for regularly-structured parallel
	applications,'' technical report 605, dept. of
	computer science, univ. of rochester, january 1996.  
	postscript.

  m. michael and m. scott, ``correction of a memory management
	method for lock-free data structures,'' technical report
	599, dept. of computer science, univ. of rochester, december
	1995. 
	postscript.

  m. michael and m. scott, ``fast mutual exclusion even with
	contention,'' technical report 460, dept. of computer
	science, univ. of rochester, june 1993.  
	postscript.




 research interests 

 thesis topic: atomic update on shared memory multiprocessors.
     advisor 
     prof. michael l. scott. 
 multiprocessor simulation tools.
 medium and large-scale shared memory multiprocessor design.
 cc-numa cache coherence protocols.


augmint
 
  
	augmint  is a multiprocessor simulation toolkit for intel
	x86 architectures.  it was developed in collaboration
	with anthony-trung nguyen and arun sharma, while working as
	summer interns for intel corporation in the summer of 1995.


algorithms

  fast non-blocking and
     lock-based concurrent queue algorithms.
  multiple-lock concurrent
     priority heap algorithm.
  fast mutual exclusion lock
     algorithm. 





finger:

michael@cs.rochester.edu

-->


 back to urcs grads directory

back to urcs home page
-->

 back to urcs grads directory 
 back to urcs home page
 .