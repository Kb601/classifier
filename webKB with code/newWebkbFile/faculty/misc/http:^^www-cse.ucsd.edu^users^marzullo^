keith marzullo's home page





 


keith marzullo
department of computer science and engineering
university of california, san diego
9500 gilman dr. 0114
la jolla, ca 92093-0114




office:  apm 4220
phone:   (619) 534-3729
fax:       (619) 534-7029
lab:       (619) 534-9669
email:   marzullo@cs.ucsd.edu
secretary:  
michele foley (619) 534-5228



i'm an associate professor and do 
research in fault-tolerant distributed systems. my most recent
interests are in the foundations of group-based programming and its
application to distributed computing architectures different than 
a collection of asynchronous workstations running on local area networks
of workstations. 

i'm affiliated with the following research projects:

  the nile project
that has to do with distributed computing for high-energy
physicists. our goal is to provide a deep hierarchical storage system
and a distributed runtime environment for very long-running jobs. my
main focus on this project is the distributed application management
issues: i'd like to be able to have the system adapt to changes in
resources, communication platforms, internet connections and internet
charges without having to rewrite the system or the applications
running on the system.

  the team project that is building
distributed computing platforms for both hard and soft-real-time
systems. my main focus has been on providing the runtime environment
to make fault-tolerant hard real-time computing available to
inexpensive platforms.


some things that i'm working on with students and ex-students:
 
 the message logging approach to making services tolerate crash
and communication failures, with 
lorenzo alvisi. we've come up with a simple and expressive way to
characterize the approach and have derived practical and optimal
protocols for both message passing and distributed shared memory
architectures. a paper describing the approach can be found 
 here
and a paper giving a set of protocols (with a comparison to manetho)
can be found here.
 group programming in a hard real-time environment, with  matthew clegg.
we've combined some of the schedulability work done for uniprocessors
with the process group abstraction for distributed systems to come up
with a system that can tolerate timing, crash and communication
failures while still meeting hard real-time deadlines.
one of the problems in such systems, of course, is clock
synchronization. a paper that describes how we do this can be found
 here.
 failure models, with 
laura sabel. we've taken apart some of the group membership
protocols to better understand what are the lower bounds are for
several of the properties that are commonly provided. one way to think
of this work is that we're looking at failure detectors that are 
stronger than a perfect failure detector and at
approximations of such failure detectors that are
implementable.

if you're interested in failure detectors in general, you might take
a look at 
a www page that compiles papers on the topic.
 comparison of fault-tolerance techniques,with  jeremy sussman.
the goal here is to understand what are the intrinsic benefits of a
given fault-tolerance paradigm, such as the primary-backup approach,
coordinatory-cohort, or active replication.






 here's a link for aleta and michael.  

 back to the departmental
home page.

 last revised 19 january 1996